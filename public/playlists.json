[
    {
      "slug": "kunal-java",
      "creator": "Kunal Kushwaha",
      "topic": "DSA in Java",
      "language": "java",
      "thumbnail": "https://img.youtube.com/vi/rZ41y93P2Qo/hqdefault.jpg",
      "videos": [
        { "title": "Best Data Structures & Algorithms (DSA) Course - Clear Any FAANG Interview!", "url": "https://youtu.be/rZ41y93P2Qo?si=c7-2fIZutVGIkY72" },
        { "title": "Java vs C++ for Data Structures & Algorithms", "url": "https://youtu.be/Nckx9qMy_kw?si=Eypp03iS7DN4ct8k" },
        { "title": "How I Cleared My Google Interviews - Use LeetCode Effectively!", "url": "https://youtu.be/waGfV-IoOt8?si=pp-PgYWyEOjt8h15" },
        { "title": "Complete Git and GitHub Tutorial", "url": "https://youtu.be/apGV9Kg7ics?si=GQR4aq8DMVzQoUlt" },
        { "title": "Introduction to Programming - Types of Languages, Memory Management", "url": "https://youtu.be/wn49bJOYAZM?si=8I1sVA-xPV-lmiGf" },
        { "title": "Flow of Program - Flowcharts & Pseudocode", "url": "https://youtu.be/lhELGQAV4gg?si=PPhukcmD8ExUvOYM" },
        { "title": "Introduction to Java - Architecture & Installation", "url": "https://youtu.be/4EP8YzcN0hQ" },
        { "title": "First Java Program - Input/Output, Debugging and Datatypes", "url": "https://youtu.be/TAtrPoaJ7gc" },
        { "title": "Conditionals and Loops + Calculator Program", "url": "https://youtu.be/ldYLYRNaucM" },
        { "title": "Switch Statements + Nested Case in Java", "url": "https://youtu.be/mA23x39DjbI" },
        { "title": "Functions / Methods in Java", "url": "https://youtu.be/vvanI8NRlSI" },
        { "title": "Introduction to Arrays and ArrayList in Java", "url": "https://youtu.be/n60Dn0UsbEk" },
        { "title": "Linear Search Algorithm - Theory + Code + Questions", "url": "https://youtu.be/_HRA37X8N_Q" },
        { "title": "Binary Search Algorithm - Theory + Code", "url": "https://youtu.be/f6UU7V3szVw" },
        { "title": "Binary Search Interview Questions - Google, Facebook, Amazon", "url": "https://youtu.be/W9QJ8HaRvJQ" },
        { "title": "Binary Search in 2D Arrays", "url": "https://youtu.be/enI_KyGLYPo" },
        { "title": "Bubble Sort Algorithm - Theory + Code", "url": "https://youtu.be/F5MZyqRp_IM" },
        { "title": "Selection Sort Algorithm - Theory + Code", "url": "https://youtu.be/Nd4SCCIHFWk" },
        { "title": "Insertion Sort Algorithm - Theory + Code", "url": "https://youtu.be/By_5-RRqVeE" },
        { "title": "Cycle Sort - Amazon, Google, Microsoft Interview Questions", "url": "https://youtu.be/JfinxytTYFQ" },
        { "title": "Strings and StringBuilder in Java", "url": "https://youtu.be/zL1DPZ0Ovlo" },
        { "title": "Solve Any Pattern Question With This Trick!", "url": "https://youtu.be/lsOOs5J8ycw" },
        { "title": "Introduction to Recursion - Learn In The Best Way", "url": "https://youtu.be/M2uO2nMT0Bk" },
        { "title": "Time and Space Complexity COMPLETE Tutorial - What is Big O?", "url": "https://youtu.be/mV3wrLBbuuE" },
        { "title": "Bitwise Operators + Number Systems - Maths for DSA", "url": "https://youtu.be/fzip9Aml6og" },
        { "title": "Maths for Data Structures & Algorithms", "url": "https://youtu.be/lmSpZ0bjCyQ" },
        { "title": "Recursion - Level 1 Questions (Theory + Code + Tips)", "url": "https://youtu.be/JxILxTwHukM" },
        { "title": "Recursion - Array Questions (Theory + Code + Tips)", "url": "https://youtu.be/sTdiMLom00U" },
        { "title": "Recursion - Pattern Questions + Bubble Sort + Selection Sort", "url": "https://youtu.be/ymgnIIclCF0" },
        { "title": "Merge Sort Using Recursion (Theory + Complexity + Code)", "url": "https://youtu.be/iKGAgWdgoRk" },
        { "title": "Quick Sort Using Recursion (Theory + Complexity + Code)", "url": "https://youtu.be/Z8svOqamag8" },
        { "title": "Recursion Subset, Subsequence, String Questions", "url": "https://youtu.be/gdifkIwCJyg" },
        { "title": "Recursion - Permutations (Theory + Code + Tips)", "url": "https://youtu.be/gDGw0cvFXPQ" },
        { "title": "Recursion Google, Amazon Questions: Dice Throw & Letter Combinations of a Phone Number", "url": "https://youtu.be/9ByWqPzfXDU" },
        { "title": "Backtracking Introduction + Maze Problems - Theory + Code + Tips", "url": "https://youtu.be/zg5v2rlV1tM" },
        { "title": "N-Queens, N-Knights, Sudoku Solver (LeetCode) - Backtracking Questions", "url": "https://youtu.be/nC1rbW2YSz0" },
        { "title": "OOP 1 | Introduction & Concepts - Classes, Objects, Constructors, Keywords", "url": "https://youtu.be/BSVKUk58K6U" },
        { "title": "OOP 2 | Packages, Static, Singleton Class, In-built Methods", "url": "https://youtu.be/_Ya6CN13t8k" },
        { "title": "OOP 3 | Principles - Inheritance, Polymorphism, Encapsulation, Abstraction", "url": "https://youtu.be/46T2wD3IuhM" },
        { "title": "OOP 4 | Access Control, In-built Packages, Object Class", "url": "https://youtu.be/W145DXs8fFg" },
        { "title": "OOP 5 | Abstract Classes, Interfaces, Annotations", "url": "https://youtu.be/rgHZa7-Dibg" },
        { "title": "OOP 6 | Generics, Custom ArrayList, Lambda Expressions, Exception Handling, Object Cloning", "url": "https://youtu.be/OY2lPr8h93U" },
        { "title": "OOP 7 | Collections Framework, Vector Class, Enums in Java", "url": "https://youtu.be/9ogGan-R1pc" },
        { "title": "Linked List Tutorial - Singly + Doubly + Circular (Theory + Code + Implementation)", "url": "https://youtu.be/58YbpRDc4yw" },
        { "title": "Linked List Interview Questions - Google, Facebook, Amazon, Microsoft", "url": "https://youtu.be/70tx7KcMROc" },
        { "title": "Stacks and Queues Complete Tutorial - Theory + Implementation + Types (Dynamic, Circular)", "url": "https://youtu.be/rHQI4mrJ3cg" },
        { "title": "Stacks and Queues Interview Questions - Google, Facebook, Amazon, Microsoft", "url": "https://youtu.be/S9LUYztYLu4" },
        { "title": "Tic Tac Toe Java Game in Under 15 Minutes", "url": "https://youtu.be/jlLNXmi4Nmw" },
        { "title": "Binary Trees Tutorial - Introduction + Traversals + Code | Binary Search Trees (BST)", "url": "https://youtu.be/4s1Tcvm00pA" },
        { "title": "AVL Trees Tutorial | Self Balancing Binary Search Trees", "url": "https://youtu.be/CVA85JuJEn0" },
        { "title": "Segment Trees Tutorial | Range Queries | Interview Questions", "url": "https://youtu.be/ciHThtTVNto" },
        { "title": "StringBuffer in Java | Data Formatting | Working With Large Data", "url": "https://youtu.be/YFZai3fPUQI" },
        { "title": "BigInteger & BigDecimal - Handling Large Numbers in Java", "url": "https://youtu.be/lHtoypC-4Ps" },
        { "title": "File Handling in Java Complete Course", "url": "https://youtu.be/b35mlSPOlJg" },
        { "title": "Binary Tree Questions for Technical Interviews - Google, Facebook, Amazon, Microsoft", "url": "https://youtu.be/9D-vP-jcc-Y" },
        { "title": "Introduction to Heap Data Structure + Priority Queue + Heapsort Tutorial", "url": "https://youtu.be/Qf-TDPr0nYw" },
        { "title": "Introduction to HashMap & HashTable in Java", "url": "https://youtu.be/XLbvmMz8Fr8" },
        { "title": "Karp-Rabin String Matching Algorithm | Substring Search Pattern", "url": "https://youtu.be/swciWFPq3NE" },
        { "title": "Count Sort Algorithm - Theory + Code", "url": "https://youtu.be/FOo820lJV1Y" },
        { "title": "Radix Sort Algorithm - Theory + Code", "url": "https://youtu.be/mLi6VQDqAOs" },
        { "title": "Huffman Coding Greedy Algorithm | Text Compression", "url": "https://youtu.be/XLfgeaYHinM" },
        { "title": "Easily Solve Range Query Interview Problems with Square Root Decomposition/Mo's Algorithm", "url": "https://youtu.be/U4YmISZViSs" },
        { "title": "Binary Tree from Preorder & Inorder Traversal - Advance Tree Questions", "url": "https://youtu.be/LFGBTFxHJII" },
        { "title": "Vertical Order Traversal of a Binary Tree - Google Interview Question", "url": "https://youtu.be/Qdr3ohMSxBo" },
        { "title": "Word Ladder - LeetCode Hard - Google Phone Screen Interview Question", "url": "https://youtu.be/2odLxQWYDi0" },
        { "title": "Two Sum IV - Google, Amazon, Facebook Interview Question", "url": "https://youtu.be/oB1EIXIDS8s" },
        { "title": "Kth Smallest Element in a BST - Google, Amazon, Facebook Interview Question", "url": "https://youtu.be/guzgnCSafg4" },
        { "title": "Convert Binary Tree to Doubly Linked List - FAANG Interview Question", "url": "https://youtu.be/kNZ5VIkqReU" },
        { "title": "Correct Binary Tree That Has Two Nodes Swapped - FAANG Interview Question", "url": "https://youtu.be/CxNRKTp6_9s" }
      ]
    },
    {
      "slug" : "striver-dsa",
      "creator": "takeUforward",
      "topic": "Striver DSA",
      "language": "java",
      "thumbnail": "https://img.youtube.com/vi/0bHoB32fuj0/hqdefault.jpg",
      "videos": [
    { "title": "Don't watch my A2Z DSA Course", "url": "https://youtu.be/0bHoB32fuj0" },
    { "title": "How to setup VS code for DSA and CP | Input / Output split format", "url": "https://youtu.be/h3uDCJ5mvgw" },
    { "title": "C++ Basics in One Shot - Strivers A2Z DSA Course - L1", "url": "https://youtu.be/EAR7De6Goz4" },
    { "title": "Time and Space Complexity - Strivers A2Z DSA Course", "url": "https://youtu.be/FPu9Uld7W-E" },
    { "title": "Solve any Pattern Question - Trick Explained | 22 Patterns in 1 Shot | Strivers A2Z DSA Course", "url": "https://youtu.be/tNm_NNSB3_w" },
    { "title": "Complete C++ STL in 1 Video | Time Complexity and Notes", "url": "https://youtu.be/RRVYpIET_RU" },
    { "title": "Basic Maths for DSA | Euclidean Algorithm | Strivers A2Z DSA Course", "url": "https://youtu.be/1xNbjMdbjug" },
    { "title": "Re 1. Introduction to Recursion | Recursion Tree | Stack Space | Strivers A2Z DSA Course", "url": "https://youtu.be/yVdKa8dnKiE" },
    { "title": "Re 2. Problems on Recursion | Strivers A2Z DSA Course", "url": "https://youtu.be/un6PLygfXrA" },
    { "title": "Re 3. Parameterised and Functional Recursion | Strivers A2Z DSA Course", "url": "https://youtu.be/69ZCDFy-OUo" },
    { "title": "Re 4. Problems on Functional Recursion | Strivers A2Z DSA Course", "url": "https://youtu.be/twuC1F6gLI8" },
    { "title": "Re 5. Multiple Recursion Calls | Problems | Strivers A2Z DSA Course", "url": "https://youtu.be/kvRjNm4rVBE" },
    { "title": "Hashing | Maps | Time Complexity | Collisions | Division Rule of Hashing | Strivers A2Z DSA Course", "url": "https://youtu.be/KEs5UyBJ39g" },
    { "title": "Sorting - Part 1 | Selection Sort, Bubble Sort, Insertion Sort | Strivers A2Z DSA Course", "url": "https://youtu.be/HGk_ypEuS24" },
    { "title": "Merge Sort | Algorithm | Pseudocode | Dry Run | Code | Strivers A2Z DSA Course", "url": "https://youtu.be/ogjf7ORKfd8" },
    { "title": "Quick Sort For Beginners | Strivers A2Z DSA Course", "url": "https://youtu.be/WIrA4YexLRQ" },
    { "title": "Find Second Largest Element in Array | Remove duplicates from Sorted Array | Arrays Intro Video", "url": "https://youtu.be/37E9ckMDdTk" },
    { "title": "Rotate Array by K places | Union, Intersection of Sorted Arrays | Move Zeros to End | Arrays Part-2", "url": "https://youtu.be/wvcQg43_V8U" },
    { "title": "Find element that appears once | Find missing number | Max Consecutive number of 1's | Arrays Part-3", "url": "https://youtu.be/bYWLJb3vCWY" },
    { "title": "Longest Subarray with sum K | Brute - Better - Optimal | Generate Subarrays", "url": "https://youtu.be/frf7qxiN2qU" },
    { "title": "2 Sum Problem | 2 types of the same problem for Interviews | Brute-Better-Optimal", "url": "https://youtu.be/UXDSeD9mN-k" },
    { "title": "Sort an array of 0's 1's & 2's | Intuition of Algo🔥 | C++ Java Python | Brute-Better-Optimal", "url": "https://youtu.be/tp8JIuCXBaU" },
    { "title": "Majority Element I | Brute-Better-Optimal | Moore's Voting Algorithm | Intuition 🔥|Brute to Optimal", "url": "https://youtu.be/nP_ns3uSh80" },
    { "title": "Kadane's Algorithm | Maximum Subarray Sum | Finding and Printing", "url": "https://youtu.be/AHZpyENo7k4" },
    { "title": "DP 35. Best Time to Buy and Sell Stock | DP on Stocks 🔥", "url": "https://youtu.be/excAOvwF_Wk" },
    { "title": "Rearrange Array Elements by Sign | 2 Varieties of same Problem", "url": "https://youtu.be/h4aBagy4Uok" },
    { "title": "Next Permutation - Intuition in Detail 🔥 | Brute to Optimal", "url": "https://youtu.be/JDOXKqF60RQ" },
    { "title": "Leaders in an Array | Brute - Optimal | Strivers A2Z DSA Course", "url": "https://youtu.be/cHrH9CQ8pmY" },
    { "title": "Longest Consecutive Sequence | Google Interview Question | Brute Better Optimal", "url": "https://youtu.be/oO5uLE7EUlM" },
    { "title": "Set Matrix Zeroes | O(1) Space Approach | Brute - Better - Optimal", "url": "https://youtu.be/N0MgLvceX7M" },
    { "title": "Rotate Matrix/Image by 90 Degrees | Brute - Optimal", "url": "https://youtu.be/Z0R2u6gd3GU" },
    { "title": "Spiral Traversal of a Matrix | Spiral Matrix", "url": "https://youtu.be/3Zv-s9UUrFM" },
    { "title": "Count Subarray sum Equals K | Brute - Better -Optimal", "url": "https://youtu.be/xvNwoz-ufXA" },
    { "title": "Pascal Triangle | Finding nCr in minimal time", "url": "https://youtu.be/bR7mQgwQ_o8" },
    { "title": "Majority Element II | Brute-Better-Optimal", "url": "https://youtu.be/vwZj1K0e9U8" },
    { "title": "3 Sum | Brute -  Better - Optimal with Codes", "url": "https://youtu.be/DhFh8Kw7ymk" },
    { "title": "4 Sum | Brute - Better - Optimal with Codes", "url": "https://youtu.be/eD95WRfh81c" },
    { "title": "Number of Subarrays with xor K | Brute - Better - Optimal", "url": "https://youtu.be/eZr-6p0B7ME" },
    { "title": "Merge Overlapping Intervals | Brute, Optimal with Precise TC analysis", "url": "https://youtu.be/IexN60k62jo" },
    { "title": "Merge Sorted Arrays Without Extra Space | 2 Optimal Solution", "url": "https://youtu.be/n7uwj04E0I4" },
    { "title": "Find the Missing and Repeating Number | 4 Approaches 🔥", "url": "https://youtu.be/2D0D8HE6uak" },
    { "title": "Count Inversions in an Array | Brute and Optimal", "url": "https://youtu.be/AseUmwVNaoY" },
    { "title": "Reverse Pairs | Hard Interview Question", "url": "https://youtu.be/0e4bZaP3MDI" },
    { "title": "Maximum Product Subarray - Best Intuitive Approach Discussed", "url": "https://youtu.be/hnswaLJvr6g" },
    { "title": "BS-1. Binary Search Introduction | Real Life Example | Iterative | Recursive | Overflow Cases", "url": "https://youtu.be/MHf6awe89xw" },
    { "title": "BS-2. Implement Lower Bound and Upper Bound | Search Insert Position | Floor and Ceil", "url": "https://youtu.be/6zhGS79oQ4k" },
    { "title": "BS-3. First and Last Occurrences in Array | Count occurrences in Array", "url": "https://youtu.be/hjR1IYVx9lY" },
    { "title": "BS-4. Search Element in Rotated Sorted Array - I", "url": "https://youtu.be/5qGrJbHhqFs" },
    { "title": "BS-5. Search Element in Rotated Sorted Array II", "url": "https://youtu.be/w2G2W8l__pc" },
    { "title": "BS-6. Minimum in Rotated Sorted Array", "url": "https://youtu.be/nhEMDKMB44g" },
    { "title": "BS-7. Find out how many times array has been rotated", "url": "https://youtu.be/jtSiWTPLwd0" },
    { "title": "BS-8. Single Element in Sorted Array", "url": "https://youtu.be/AZOmHuHadxQ" },
    { "title": "BS-9. Find Peak Element", "url": "https://youtu.be/cXxmbemS6XM" },
    { "title": "BS-10. Finding Sqrt of a number using Binary Search", "url": "https://youtu.be/Bsv3FPUX_BA" },
    { "title": "BS-11. Find the Nth root of an Integer", "url": "https://youtu.be/rjEJeYCasHs" },
    { "title": "BS-12. Koko Eating Bananas", "url": "https://youtu.be/qyfekrNni90" },
    { "title": "BS-13. Minimum days to make M bouquets | Binary Search", "url": "https://youtu.be/TXauxeYBTdg" },
    { "title": "BS-14. Find the Smallest Divisor Given a Threshold | Binary Search", "url": "https://youtu.be/UvBKTVaG6U8" },
    { "title": "BS-15. Capacity to Ship Packages within D Days", "url": "https://youtu.be/MG-Ac4TAvTY" },
    { "title": "BS-16. Kth Missing Positive Number | Maths + Binary Search", "url": "https://youtu.be/uZ0N_hZpyps" },
    { "title": "BS-17. Aggressive Cows | Binary Search Hard", "url": "https://youtu.be/R_Mfw4ew-Vo" },
    { "title": "BS-18. Allocate Books or Book Allocation | Hard Binary Search", "url": "https://youtu.be/Z0hwjftStI4" },
    { "title": "BS 19. Painter's Partition and Split Array - Largest Sum", "url": "https://youtu.be/thUd_WJn6wk" },
    { "title": "BS-20. Minimise Maximum Distance between Gas Stations | 3 Approaches | Heap | Binary Search", "url": "https://youtu.be/kMSBvlZ-_HA" },
    { "title": "BS 21: Median of two Sorted Arrays of Different Sizes | Brute and Better Approach", "url": "https://youtu.be/C2rRzz-JDk8" },
    { "title": "BS-21. Median of two Sorted Arrays of Different Sizes | Binary Search Approach With Intuition", "url": "https://youtu.be/F9c7LpRZWVQ" },
    { "title": "Bs-22. K-th element of two sorted arrays | Binary Search Approach", "url": "https://youtu.be/D1oDwWCq50g" },
    { "title": "BS 23. Row with maximum number of 1s | Binary Search on 2D Arrays", "url": "https://youtu.be/SCz-1TtYxDI" },
    { "title": "BS-24. Search in a 2D Matrix - I | Binary Search of 2D", "url": "https://youtu.be/JXU4Akft7yk" },
    { "title": "BS-25. Search in a 2D Matrix - II  |  Binary Search on 2D", "url": "https://youtu.be/9ZbB397jU4k" },
    { "title": "BS-26. Find Peak Element-II | Binary Search", "url": "https://youtu.be/nGGp5XBzC4g" },
    { "title": "BS-27. Median in a Row Wise Sorted Matrix", "url": "https://youtu.be/Q9wXgdxJq48" },
    { "title": "L1. Introduction to Trees | Types of Trees", "url": "https://youtu.be/_ANrF3FJm7I" },
    { "title": "L2. Binary Tree Representation in C++", "url": "https://youtu.be/ctCpP0RFDFc" },
    { "title": "L3. Binary Tree Representation in Java", "url": "https://youtu.be/hyLyW7rP24I" },
    { "title": "L4. Binary Tree Traversals in Binary Tree | BFS | DFS", "url": "https://youtu.be/jmy0LaGET1I" },
    { "title": "L5. Preorder Traversal of Binary Tree | C++ | Java | Code Explanation", "url": "https://youtu.be/RlUu72JrOCQ" },
    { "title": "L6. Inorder Traversal of Binary Tree | C++ | Java | Code Explanation", "url": "https://youtu.be/Z_NEgBgbRVI" },
    { "title": "L7. Postorder Traversal of Binary Tree | C++ | Java | Code Explanation", "url": "https://youtu.be/COQOU6klsBg" },
    { "title": "L8. Level Order Traversal of Binary Tree | BFS | C++ | Java", "url": "https://youtu.be/EoAsWbO7sqg" },
    { "title": "L9. Iterative Preorder Traversal in Binary Tree | C++ | Java | Stack", "url": "https://youtu.be/Bfqd8BsPVuw" },
    { "title": "L10. iterative Inorder Traversal in Binary Tree | C++ | Java | Stack", "url": "https://youtu.be/lxTGsVXjwvM" },
    { "title": "L11. Iterative Postorder Traversal using 2 Stack | C++ | Java | Binary Tree", "url": "https://youtu.be/2YBhNLodD8Q" },
    { "title": "L12. Iterative Postorder Traversal using 1 Stack | C++ | Java | Binary Trees", "url": "https://youtu.be/NzIGLLwZBS8" },
    { "title": "L13. Preorder Inorder Postorder Traversals in One Traversal | C++ | Java | Stack | Binary Trees", "url": "https://youtu.be/ySp2epYvgTE" },
    { "title": "L14. Maximum Depth in Binary Tree | Height of Binary Tree | C++ | Java", "url": "https://youtu.be/eD3tmO66aBA" },
    { "title": "L15. Check for Balanced Binary Tree | C++ | Java", "url": "https://youtu.be/Yt50Jfbd8Po" },
    { "title": "L16. Diameter of Binary Tree | C++ | Java", "url": "https://youtu.be/Rezetez59Nk" },
    { "title": "L17. Maximum Path Sum in Binary Tree | C++ | Java", "url": "https://youtu.be/WszrfSwMz58" },
    { "title": "L18. Check it two trees are Identical or Not | C++ | Java", "url": "https://youtu.be/BhuvF_-PWS0" },
    { "title": "L19. Zig-Zag or Spiral Traversal in Binary Tree | C++ | Java", "url": "https://youtu.be/3OXWEdlIGl4" },
    { "title": "L20. Boundary Traversal in Binary Tree | C++ | Java", "url": "https://youtu.be/0ca1nvR0be4" },
    { "title": "L21. Vertical Order Traversal of Binary Tree | C++ | Java", "url": "https://youtu.be/q_a6lpbKJdw" },
    { "title": "L22. Top View of Binary Tree | C++ | Java", "url": "https://youtu.be/Et9OCDNvJ78" },
    { "title": "L23. Bottom View of Binary Tree | C++ | Java", "url": "https://youtu.be/0FtVY6I4pB8" },
    { "title": "L24. Right/Left View of Binary Tree | C++ | Java", "url": "https://youtu.be/KV4mRzTjlAk" },
    { "title": "L25. Check for Symmetrical Binary Trees | C++ | Java", "url": "https://youtu.be/nKggNAiEpBE" },
    { "title": "L26. Print Root to Node Path in Binary Tree | C++ | Java", "url": "https://youtu.be/fmflMqVOC7k" },
    { "title": "L27. Lowest Common Ancestor in Binary Tree | LCA | C++ | Java", "url": "https://youtu.be/_-QHfMDde90" },
    { "title": "L28. Maximum Width of Binary Tree | C++ | Java", "url": "https://youtu.be/ZbybYvcVLks" },
    { "title": "L29. Children Sum Property in Binary Tree | O(N) Approach | C++ | Java", "url": "https://youtu.be/fnmisPM6cVo" },
    { "title": "L30. Print all the Nodes at a distance of K in Binary Tree | C++ | Java", "url": "https://youtu.be/i9ORlEy6EsI" },
    { "title": "L31. Minimum time taken to BURN the Binary Tree from a Node | C++ | Java", "url": "https://youtu.be/tw1FgAPH4Gs" },
    { "title": "L32. Count total Nodes in a COMPLETE Binary Tree | O(Log^2 N) Approach | C++ | Java", "url": "https://youtu.be/u-yWemKGWO0" },
    { "title": "L33. Requirements needed to construct a Unique Binary Tree | Theory", "url": "https://youtu.be/9GMECGQgWrQ" },
    { "title": "L34. Construct a Binary Tree from Preorder and Inorder Traversal | C++ | Java", "url": "https://youtu.be/aZNaLrVebKQ" },
    { "title": "L35. Construct the Binary Tree from Postorder and Inorder Traversal | C++ | Java", "url": "https://youtu.be/LgLRTaEMRVc" },
    { "title": "L36. Serialize and De-serialize Binary Tree | C++ | Java", "url": "https://youtu.be/-YbXySKJsX8" },
    { "title": "L37. Morris Traversal | Preorder | Inorder | C++ | Java", "url": "https://youtu.be/80Zug6D1_r4" },
    { "title": "L38. Flatten a Binary Tree to Linked List | 3 Approaches | C++ | Java", "url": "https://youtu.be/sWf7k1x9XR4" },
    { "title": "L39. Introduction to Binary Search Tree | BST", "url": "https://youtu.be/p7-9UvDQZ3w" },
    { "title": "L40. Search in a Binary Search Tree | BST | C++ | Java", "url": "https://youtu.be/KcNt6v_56cc" },
    { "title": "L41. Ceil in a Binary Search Tree | BST | C++ | Java", "url": "https://youtu.be/KSsk8AhdOZA" },
    { "title": "L42. Floor in a Binary Search Tree | BST | C++ | Java", "url": "https://youtu.be/xm_W1ub-K-w" },
    { "title": "L43. Insert a given Node in Binary Search Tree | BST | C++ | Java", "url": "https://youtu.be/FiFiNvM29ps" },
    { "title": "L44. Delete a Node in Binary Search Tree | BST | C++ | Java", "url": "https://youtu.be/kouxiP_H5WE" },
    { "title": "L45. K-th Smallest/Largest Element in BST", "url": "https://youtu.be/9TJYWh0adfk" },
    { "title": "L46. Check if a tree is a BST or BT | Validate a BST", "url": "https://youtu.be/f-sj7I5oXEI" },
    { "title": "L47. LCA in Binary Search Tree", "url": "https://youtu.be/cX_kPV_foZc" },
    { "title": "L48. Construct a BST from a preorder traversal | 3 Methods", "url": "https://youtu.be/UmJT3j26t1I" },
    { "title": "L49. Inorder Successor/Predecessor in BST | 3 Methods", "url": "https://youtu.be/SXKAD2svfmI" },
    { "title": "L50. Binary Search Tree Iterator | BST | O(H) Space", "url": "https://youtu.be/D2jMcmxU4bs" },
    { "title": "L51. Two Sum In BST | Check if there exists a pair with Sum K", "url": "https://youtu.be/ssL3sHwPeb4" },
    { "title": "L52. Recover BST | Correct BST with two nodes swapped", "url": "https://youtu.be/ZWGW7FminDM" },
    { "title": "L53. Largest BST in Binary Tree", "url": "https://youtu.be/X0oXMdtUDwo" },
    { "title": "G-1. Introduction to Graph | Types | Different Conventions Used", "url": "https://youtu.be/M3_pLsDdeuU" },
    { "title": "G-2. Graph Representation in C++ | Two Ways to Represent", "url": "https://youtu.be/3oI-34aPMWM" },
    { "title": "G-3. Graph Representation in Java | Two Ways to Represent", "url": "https://youtu.be/OsNklbh9gYI" },
    { "title": "G-4. What are Connected Components ?", "url": "https://youtu.be/lea-Wl_uWXY" },
    { "title": "G-5. Breadth-First Search (BFS) | C++ and Java | Traversal Technique in Graphs", "url": "https://youtu.be/-tgVpUgsQ5k" },
    { "title": "G-6. Depth-First Search (DFS) | C++ and Java | Traversal Technique in Graphs", "url": "https://youtu.be/Qzf1a--rhp8" },
    { "title": "G-7. Number of Provinces | C++ | Java | Connected Components", "url": "https://youtu.be/ACzkVtewUYA" },
    { "title": "G-8. Number of Islands | Number of Connected Components in Matrix | C++ | Java", "url": "https://youtu.be/muncqlKJrH0" },
    { "title": "G-9. Flood Fill Algorithm | C++ | Java", "url": "https://youtu.be/C-2_uSRli8o" },
    { "title": "G-10. Rotten Oranges | C++ | Java", "url": "https://youtu.be/yf3oUhkvqA0" },
    { "title": "G-11. Detect a Cycle in an Undirected Graph using BFS | C++ | Java", "url": "https://youtu.be/BPlrALf1LDU" },
    { "title": "G-12. Detect a Cycle in an Undirected Graph using DFS | C++ | Java", "url": "https://youtu.be/zQ3zgFypzX4" },
    { "title": "G-13. Distance of nearest cell having 1 | 0/1 Matrix | C++ | Java", "url": "https://youtu.be/edXdVwkYHF8" },
    { "title": "G-14. Surrounded Regions | Replace O's with X's | C++ | Java", "url": "https://youtu.be/BtdgAys4yMk" },
    { "title": "G-15. Number of Enclaves | Multi-source BFS | C++ | Java", "url": "https://youtu.be/rxKcepXQgU4" },
    { "title": "G-16. Number of Distinct Islands | Constructive Thinking + DFS | C++ | Java", "url": "https://youtu.be/7zmgQSJghpo" },
    { "title": "G-17. Bipartite Graph | BFS | C++ | Java", "url": "https://youtu.be/-vu34sct1g8" },
    { "title": "G-18. Bipartite Graph | DFS | C++ | Java", "url": "https://youtu.be/KG5YFfR0j8A" },
    { "title": "G-19. Detect cycle in a directed graph using DFS | Java | C++", "url": "https://youtu.be/9twcmtQj4DU" },
    { "title": "G-20. Find Eventual Safe States - DFS", "url": "https://youtu.be/uRbJ1OF9aYM" },
    { "title": "G-21. Topological Sort Algorithm | DFS", "url": "https://youtu.be/5lZ0iJMrUMk" },
    { "title": "G-22. Kahn's Algorithm | Topological Sort Algorithm | BFS", "url": "https://youtu.be/73sneFXuTEg" },
    { "title": "G-23. Detect a Cycle in Directed Graph | Topological Sort | Kahn's Algorithm | BFS", "url": "https://youtu.be/iTBaI90lpDQ" },
    { "title": "G-24. Course Schedule I and II | Pre-requisite Tasks | Topological Sort", "url": "https://youtu.be/WAOfKpxYHR8" },
    { "title": "G-25. Find Eventual Safe States - BFS - Topological Sort", "url": "https://youtu.be/2gtg3VsDGyc" },
    { "title": "G-26. Alien Dictionary - Topological Sort", "url": "https://youtu.be/U3N_je7tWAs" },
    { "title": "G-27. Shortest Path in Directed Acyclic Graph - Topological Sort", "url": "https://youtu.be/ZUFQfFaU-8U" },
    { "title": "G-28. Shortest Path in Undirected Graph with Unit Weights", "url": "https://youtu.be/C4gxoTaI71U" },
    { "title": "G-29. Word Ladder - I | Shortest Paths", "url": "https://youtu.be/tRPda0rcf8E" },
    { "title": "G-30. Word Ladder - 2 | Shortest Paths", "url": "https://youtu.be/DREutrv2XD0" },
    { "title": "G-31. Word Ladder - 2 | Optimised Approach for Leetcode", "url": "https://youtu.be/AD4SFl7tu7I" },
    { "title": "G-32. Dijkstra's Algorithm - Using Priority Queue - C++ and Java - Part 1", "url": "https://youtu.be/V6H1qAeB-l4" },
    { "title": "G-33. Dijkstra's Algorithm - Using Set - Part 2", "url": "https://youtu.be/PATgNiuTP20" },
    { "title": "G-34. Dijkstra's Algorithm - Why PQ and not Q, Intuition, Time Complexity Derivation - Part 3", "url": "https://youtu.be/3dINsjyfooY" },
    { "title": "G-35. Print Shortest Path - Dijkstra's Algorithm", "url": "https://youtu.be/rp1SMw7HSO8" },
    { "title": "G-36. Shortest Distance in a Binary Maze", "url": "https://youtu.be/U5Mw4eyUmw4" },
    { "title": "G-37. Path With Minimum Effort", "url": "https://youtu.be/0ytpZyiZFhA" },
    { "title": "G-38. Cheapest Flights Within K Stops", "url": "https://youtu.be/9XybHVqTHcQ" },
    { "title": "G-39. Minimum Multiplications to Reach End", "url": "https://youtu.be/_BvEJ3VIDWw" },
    { "title": "G-40. Number of Ways to Arrive at Destination", "url": "https://youtu.be/_-0mx0SmYxA" },
    { "title": "G-41. Bellman Ford Algorithm", "url": "https://youtu.be/0vVofAhAYjc" },
    { "title": "G-42. Floyd Warshall Algorithm", "url": "https://youtu.be/YbY8cVwWAvw" },
    { "title": "G-43. Find the City With the Smallest Number of Neighbours at a Threshold Distance", "url": "https://youtu.be/PwMVNSJ5SLI" },
    { "title": "G-44. Minimum Spanning Tree - Theory", "url": "https://youtu.be/ZSPjZuZWCME" },
    { "title": "G-45. Prim's Algorithm - Minimum Spanning Tree - C++ and Java", "url": "https://youtu.be/mJcZjjKzeqk" },
    { "title": "G-46. Disjoint Set | Union by Rank | Union by Size | Path Compression", "url": "https://youtu.be/aBxjDBC4M1U" },
    { "title": "G-47. Kruskal's Algorithm - Minimum Spanning Tree - C++ and Java", "url": "https://youtu.be/DMnDM_sxVig" },
    { "title": "G-48. Number of Provinces - Disjoint Set", "url": "https://youtu.be/ZGr5nX-Gi6Y" },
    { "title": "G-49. Number of Operations to Make Network Connected - DSU", "url": "https://youtu.be/FYrl7iz9_ZU" },
    { "title": "G-50. Accounts Merge - DSU", "url": "https://youtu.be/FMwpt_aQOGw" },
    { "title": "G-51. Number of Islands - II - Online Queries - DSU", "url": "https://youtu.be/Rn6B-Q4SNyA" },
    { "title": "G-52. Making a Large Island - DSU", "url": "https://youtu.be/lgiz0Oup6gM" },
    { "title": "G-53. Most Stones Removed with Same Row or Column - DSU", "url": "https://youtu.be/OwMNX8SPavM" },
    { "title": "G-54. Strongly Connected Components - Kosaraju's Algorithm", "url": "https://youtu.be/R6uoSjZ2imo" },
    { "title": "G-55. Bridges in Graph - Using Tarjan's Algorithm of time in and low time", "url": "https://youtu.be/qrAub5z8FeA" },
    { "title": "G-56. Articulation Point in Graph", "url": "https://youtu.be/j1QDfU21iZk" },
    { "title": "DP 1. Introduction to Dynamic Programming | Memoization | Tabulation | Space Optimization Techniques", "url": "https://youtu.be/tyB0ztf0DNY" },
    { "title": "DP 2. Climbing Stairs | Learn How to Write 1D Recurrence Relations", "url": "https://youtu.be/mLfjzJsN8us" },
    { "title": "DP 3. Frog Jump | Dynamic Programming | Learn to write 1D DP", "url": "https://youtu.be/EgG3jsGoPvQ" },
    { "title": "DP 4. Frog Jump with K Distance | Lecture 3 Follow Up Question", "url": "https://youtu.be/Kmh3rhyEtB8" },
    { "title": "DP 5. Maximum Sum of Non-Adjacent Elements | House Robber | 1-D | DP on Subsequences", "url": "https://youtu.be/GrMBfJNk_NY" },
    { "title": "DP 6. House Robber 2 | 1D DP | DP on Subsequences", "url": "https://youtu.be/3WaxQMELSkw" },
    { "title": "DP 7. Ninja's Training | MUST WATCH for 2D CONCEPTS 🔥 | Vacation | Atcoder | 2D DP |", "url": "https://youtu.be/AE39gJYuRog" },
    { "title": "DP 8. Grid Unique Paths | Learn Everything about DP on Grids | ALL TECHNIQUES 🔥", "url": "https://youtu.be/sdE0A2Oxofw" },
    { "title": "DP 9. Unique Paths 2 | DP on Grid with Maze Obstacles", "url": "https://youtu.be/TmhpgXScLyY" },
    { "title": "DP 10. Minimum Path Sum in Grid | Asked to me In Microsoft Internship Interview | DP on GRIDS", "url": "https://youtu.be/_rgTlyky1uQ" },
    { "title": "DP 11. Triangle | Fixed Starting Point and Variable Ending Point | DP on GRIDS", "url": "https://youtu.be/SrP-PiLSYC0" },
    { "title": "DP 12. Minimum/Maximum Falling Path Sum | Variable Starting and Ending Points | DP on Grids", "url": "https://youtu.be/N_aJ5qQbYA0" },
    { "title": "DP 13. Cherry Pickup II | 3D DP Made Easy | DP On Grids", "url": "https://youtu.be/QGfn7JeXK54" },
    { "title": "DP 14. Subset Sum Equals to Target | Identify DP on Subsequences and Ways to Solve them", "url": "https://youtu.be/fWX9xDmIzRI" },
    { "title": "DP 15. Partition Equal Subset Sum | DP on Subsequences", "url": "https://youtu.be/7win3dcgo3k" },
    { "title": "Dp 16. Partition A Set Into Two Subsets With Minimum Absolute Sum Difference | DP on Subsequences", "url": "https://youtu.be/GS_OqZb2CWc" },
    { "title": "DP 17. Counts Subsets with Sum K | Dp on Subsequences", "url": "https://youtu.be/ZHyb-A2Mte4" },
    { "title": "DP 18. Count Partitions With Given Difference | Dp on Subsequences", "url": "https://youtu.be/zoilQD1kYSg" },
    { "title": "DP 19. 0/1 Knapsack | Recursion to Single Array Space Optimised Approach | DP on Subsequences", "url": "极客时间" },
    { "title": "DP 20. Minimum Coins | DP on Subsequences | Infinite Supplies Pattern", "url": "https://youtu.be/myPeWb3Y68A" },
    { "title": "DP 21. Target Sum | DP on Subsequences", "url": "https://youtu.be/b3GD8263-PQ" },
    { "title": "DP 22. Coin Change 2 | Infinite Supply Problems  | DP on Subsequences", "url": "https://youtu.be/HgyouUi11zk" },
    { "title": "DP 23. Unbounded Knapsack | 1-D Array Space Optimised Approach", "url": "https://youtu.be/OgvOZ6OrJoY" },
    { "title": "DP 24. Rod Cutting Problem | 1D Array Space Optimised Approach", "url": "https://youtu.be/mO8XpGoJwuo" },
    { "title": "Dp 25. Longest Common Subsequence | Top Down | Bottom-Up | Space Optimised | DP on Strings", "url": "https://youtu.be/NPZn9jBrX8U" },
    { "title": "DP 26. Print Longest Common Subsequence | Dp on Strings", "url": "https://youtu.be/-zI4mrF2Pb4" },
    { "title": "DP 27. Longest Common Substring | DP on Strings 🔥", "url": "https://youtu.be/_wP9mWNPL5w" },
    { "title": "DP 28. Longest Palindromic Subsequence", "url": "https://www.youtube.com/watch?v=xPBLEj41rFU" },
    { "title": "DP 29. Minimum Insertions to Make String Palindrome", "url": "https://youtu.be/xPBLEj41rFU" },
    { "title": "DP 30. Minimum Insertions/Deletions to Convert String A to String B", "url": "https://youtu.be/yMnH0jrir0Q" },
    { "title": "DP 31. Shortest Common Supersequence | DP on Strings", "url": "https://youtu.be/xElxAuBcvsU" },
    { "title": "DP 32. Distinct Subsequences | 1D Array Optimisation Technique 🔥", "url": "https://youtu.be/nVG7eTiD2bY" },
    { "title": "DP 33. Edit Distance | Recursive to 1D Array Optimised Solution 🔥", "url": "https://youtu.be/fJaKO8FbDdo" },
    { "title": "DP 34. Wildcard Matching | Recursive to 1D Array Optimisation 🔥", "url": "https://youtu.be/ZmlQ3vgAOMo" },
    { "title": "DP 36. Buy and Sell Stock - II | Recursion to Space Optimisation", "url": "https://youtu.be/nGJmxkUJQGs" },
    { "title": "DP 37. Buy and Sell Stocks III | Recursion to Space Optimisation", "url": "https://youtu.be/-uQGzhYj8BQ" },
    { "title": "DP 38. Buy and Stock Sell IV | Recursion to Space Optimisation", "url": "https://youtu.be/IV1dHbk5CDc" },
    { "title": "DP 39. Buy and Sell Stocks With Cooldown | Recursion to Space Optimisation", "url": "https://youtu.be/IGIe46xw3YY" },
    { "title": "DP 40. Buy and Sell Stocks With Transaction Fee | Recursion to Space Optimisation", "url": "https://youtu.be/k4eK-vEmnKg" },
    { "title": "DP 41. Longest Increasing Subsequence | Memoization", "url": "https://youtu.be/ekcwMsSIzVc" },
    { "title": "DP 42. Printing Long极客时间", "url": "https://youtu.be/IFfYfonAFGc" },
    { "title": "DP 43. Longest Increasing Subsequence | Binary Search | Intuition", "url": "https://youtu.be/on2hvxBXJH4" },
    { "title": "DP 44. Largest Divisible Subset | Longest Increasing Subsequence", "url": "https://youtu.be/gDuZwBW9VvM" },
    { "title": "DP 45. Longest String Chain | Longest Increasing Subsequence | LIS", "url": "https://youtu.be/YY8iBaYcc4g" },
    { "title": "DP 46. Longest Bitonic Subsequence | LIS", "url": "https://youtu.be/y4vN0WNdrlg" },
    { "title": "DP 47. Number of Longest Increasing Subsequences", "url": "https://youtu.be/cKVl1TFdNXg" },
    { "title": "DP 48. Matrix Chain Multiplication | MCM | Partition DP Starts 🔥", "url": "https://youtu.be/vRVfmbCFW7Y" },
    { "title": "DP 49. Matrix Chain Multiplication | Bottom-Up | Tabulation", "url": "https://youtu.be/pDCXsbAw5Cg" },
    { "title": "DP 50. Minimum Cost to Cut the Stick", "url": "https://youtu.be/xwomavsC86c" },
    { "title": "DP 51. Burst Balloons | Partition DP | Interactive G-Meet Session Update", "url": "https://youtu.be/Yz4LlDSlkns" },
    { "title": "DP 52. Evaluate Boolean Expression to True | Partition DP", "url": "https://youtu.be/MM7fXopgyjw" },
    { "title": "DP 53. Palindrome Partitioning - II | Front Partition 🔥", "url": "https://youtu.be/_H8V5hJUGd0" },
    { "title": "DP 54. Partition Array for Maximum Sum | Front Partition 🔥", "url": "https://youtu.be/PhWWJmaKfMc" },
    { "title": "DP 55. Maximum Rectangle Area with all 1's | DP on Rectangles", "url": "https://youtu.be/tOylVCugy9k" },
    { "title": "DP 56. Count Square Submatrices with All Ones | DP on Rectangles 🔥", "url": "https://youtu.be/auS1fynpnjo" },
    { "title": "L1. Introduction to LinkedList | Traversal | Length | Search an Element", "url": "https://youtu.be/Nq7ok-OyEpg" },
    { "title": "L2. Deletion and Insertion in LL | 8 Problems", "url": "https://youtu.be/VaECK03Dz-g" },
    { "title": "L3. Introduction to Doubly LinkedList | Insertions and Deletions", "url": "https://youtu.be/0eKMU10uEDI" },
    { "title": "L4. Reverse a DLL | Multiple Approaches", "url": "https://youtu.be/u3WUW2qe6ww" },
    { "title": "L5. Add 2 numbers in LinkedList | Dummy Node Approach", "url": "https://youtu.be/XmRrGzR6udg" },
    { "title": "L6. Odd Even Linked List | Multiple Approaches", "url": "https://youtu.be/qf6qp7GzD5Q" },
    { "title": "L7. Sort a LinkedList of 0's, 1's and 2's | Multiple Approaches", "url": "https://youtu.be/gRII7LhdJWc" },
    { "title": "L8. Remove Nth Node from the end of the LinkedList | Multiple Approaches", "url": "https://youtu.be/3kMKYQ2wNIU" },
    { "title": "L9. Reverse a LinkedList | Iterative and Recursive", "url": "https://youtu.be/D2vI2DNJGd8" },
    { "title": "L10. Check if a LinkedList is Palindrome or Not | Multiple Approaches", "url": "https://youtu.be/lRY_G-u_8jk" },
    { "title": "L11. Add 1 to a number represented by LinkedList", "url": "https://youtu.be/aXQWhbvT3w0" },
    { "title": "L12. Find the intersection point of Y LinkedList", "url": "https://youtu.be/0DYoPz2Tpt4" },
    { "title": "L13. Find the middle element of the LinkedList | Multiple Approaches", "url": "https://youtu.be/7LjQ57RqgEc" },
    { "title": "L14. Detect a loop or cycle in LinkedList | With proof and Intuition", "url": "https://youtu.be/wiOo4DC5GGA" },
    { "title": "L15. Find the length of the Loop in LinkedList", "url": "https://youtu.be/I4g1qbkTPus" },
    { "title": "L16. Delete the middle node of the LinkedList", "url": "https://youtu.be/ePpV-_pfOeI" },
    { "title": "L17. Find the starting point of the Loop/Cycle in LinkedList | Multiple Approaches", "url": "https://youtu.be/2Kd0KKmmHFc" },
    { "title": "L18. Delete all occurrences of a Key in DLL", "url": "https://youtu.be/Mh0NH_SD92k" },
    { "title": "L19. Find all Pairs with given Sum in DLL", "url": "https://youtu.be/YitR4dQsddE" },
    { "title": "L20. Remove duplicates from sorted DLL", "url": "https://youtu.be/YJKVTnOJXSY" },
    { "title": "L21. Reverse Nodes in K Group Size of LinkedList", "url": "https://youtu.be/lIar1skcQYI" },
    { "title": "L22. Rotate a LinkedList", "url": "https://youtu.be/uT7YI7XbTY8" },
    { "title": "L23. Merge two sorted Linked Lists", "url": "https://youtu.be/jXu-H7XuClE" },
    { "title": "L24. Flattening a LinkedList | Multiple Approaches with Dry Run", "url": "https://youtu.be/ykelywHJWLg" },
    { "title": "L25. Merge K Sorted Lists | Multiple Approaches", "url": "https://youtu.be/1zktEppsdig" },
    { "title": "L26. Sort a Linked List | Merge Sort and Brute Force", "url": "https://youtu.be/8ocB7a_c-Cc" },
    { "title": "L27. Clone a LinkedList with Next and Random Pointers | Copy List with Random Pointers", "url": "https://youtu.be/q570bKdrnlw" },
    { "title": "L28. Design a Browser History | LinkedList Implementation", "url": "https://youtu.be/mG3KLugbOdc" },
    { "title": "L2. Print all Divisors of a Number | Maths Playlist", "url": "https://youtu.be/Ae_Ag_saG9s" },
    { "title": "L3. Check if a Number if Prime or not | Maths Playlist", "url": "https://youtu.be/MJcckSfoYdI" },
    { "title": "L4. Print all prime factors of a Number | Maths Playlist", "url": "https://youtu.be/LT7XhVdeRyg" },
    { "title": "L5. Power Exponentiation | Maths Playlist", "url": "https://youtu.be/hFWckDXE-K8" },
    { "title": "L6. Sieve of Eratosthenes | Maths Playlist", "url": "https://youtu.be/g5Fuxn_AvSk" },
    { "title": "L7. Count Prime in a range L-R | Maths Playlist", "url": "https://youtu.be/os82DjD2-MA" },
    { "title": "L8. Smallest Prime Factor (SPF) | Prime Factorisation | Query Based Problem | Maths Playlist", "url": "https://youtu.be/glKWkmKFlMw" },
    { "title": "L1. Introduction to Sliding Window and 2 Pointers | Templates | Patterns", "url": "https://youtu.be/9kdHxplyl5I" },
    { "title": "L2. Maximum Points You Can Obtain from Cards | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/pBWCOCS636U" },
    { "title": "L3. Longest Substring Without Repeating Characters | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/-zSxTJkcdAo" },
    { "title": "L4. Max Consecutive Ones III | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/3E4JBHSLpYk" },
    { "title": "L5. Fruit Into Baskets | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/e3bs0uA1NhQ" },
    { "title": "L6. Longest Substring With At Most K Distinct Characters | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/teM9ZsVRQyc" },
    { "title": "L7. Number of Substrings Containing All Three Characters | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/xtqN4qlgr8s" },
    { "title": "L8. Longest Repeating Character Replacement | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/_eNhaDCr6P0" },
    { "title": "L9. Binary Subarrays With Sum | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/XnMdNUkX6VM" },
    { "title": "L10. Count number of Nice subarrays | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/j_QOv9OT9Og" },
    { "title": "L11. Subarray with k different integers | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/7wYGbV_LsX4" },
    { "title": "L12. Minimum Window Substring | 2 Pointers and Sliding Window Playlist", "url": "https://youtu.be/WJaij9ffOIY" },
    { "title": "L1. Assign Cookies | Greedy Algorithm Playlist", "url": "https://youtu.be/DIX2p7vb9co" },
    { "title": "L2. Lemonade Change | Greedy Algorithm Playlist", "url": "https://youtu.be/n_tmibEhO6Q" },
    { "title": "L3. Shortest Job First (or SJF) CPU Scheduling", "url": "https://youtu.be/3-QbX1iDbXs" },
    { "title": "L4. Jump Game - I | Greedy Algorithm Playlist", "url": "https://youtu.be/tZAa_jJ3SwQ" },
    { "title": "L5. Jump Game - II | Greedy Algorithm Playlist", "url": "https://youtu.be/7SBVnw7GSTk" },
    { "title": "L6. Job Sequencing Problem | Greedy Algorithm Playlist", "url": "https://youtu.be/QbwltemZbRg" },
    { "title": "L7. N Meeting in One Room | Greedy Algorithms Playlist", "url": "https://youtu.be/mKfhTotEguk" },
    { "title": "L8. Non Overlapping Intervals | Greedy Algorithms Playlist", "url": "https://youtu.be/HDHQ8lAWakY" },
    { "title": "L9. Insert Intervals | Greedy Algorithms Playlist", "url": "https://youtu.be/xxRE-46OCC8" },
    { "title": "L10. Minimum number of platforms required in a railway station", "url": "https://youtu.be/AsGzwR_FWok" },
    { "title": "L11. Valid Parenthesis String | Multiple Approaches", "url": "https://youtu.be/cHT6sG_hUZI" },
    { "title": "L12. Candy | Slope Approach Intuition Based", "url": "https://youtu.be/IIqVFvKE6RY" },
    { "title": "L13. Fractional Knapsack Algorithm", "url": "https://youtu.be/1ibsQrnuEEg" },
    { "title": "L1. Introduction to Stack and Queue | Implementation using Data Structures", "url": "https://youtu.be/tqQ5fTamIN4" },
    { "title": "L2. Check for Balanced Parentheses | Stack and Queue", "url": "https://youtu.be/xwjS0iZhw4I" },
    { "title": "L3. Prefix, Infix, and Postfix Conversion | Stack and Queue Playlist", "url": "https://youtu.be/4pIc9UBHJtk" },
    { "title": "L4. Implement Min Stack | Stack and Queue Playlist", "url": "https://youtu.be/NdDIaH91P0g" },
    { "title": "L5. Next Greater Element | Stack and Queue Playlist", "url": "https://youtu.be/e7XQLtOQM3I" },
    { "title": "L6. Next Greater Element - II | Stack and Queue Playlist", "url": "https://youtu.be/7PrncD7v9YQ" },
    { "title": "L7. Previous Smaller Element | Stack and Queue Playlist", "url": "https://youtu.be/zMdbdGJNlh4" },
    { "title": "L8. Trapping Rainwater | 2 Approaches | Stack and Queue Playlist", "url": "https://youtu.be/1_5VuquLbXg" },
    { "title": "L9. Sum of Subarray Minimum | Stack and Queue Playlist", "url": "https://youtu.be/v0e8p9JCgRc" },
    { "title": "L10. Sum of subarray ranges | Stack and Queue Playlist", "url": "https://youtu.be/gIrMptNPf5M" },
    { "title": "L11. Aestroid Collisions | Stack and Queue Playlist", "url": "https://youtu.be/_eYGqw_VDR4" },
    { "title": "L12. Largest Rectangle in Histogram | Stack and Queue Playlist", "url": "https://youtu.be/Bzat9vgD0fs" },
    { "title": "L13. Maximal Rectangle | Stack and Queue Playlist", "url": "https://youtu.be/ttVu6G7Ayik" },
    { "title": "L14. Remove K Digits | Stack and Queue Playlist", "url": "https://youtu.be/jmbuRzYPGrg" },
    { "title": "L15. Stock Span Problem | Stack and Queue Playlist", "url": "https://youtu.be/eay-zoSRkVc" },
    { "title": "L16. Sliding Window Maximum | Stack and Queue Playlist", "url": "https://youtu.be/NwBvene4Imo" },
    { "title": "L17. The Celebrity Problem | Stack and Queue Playlist", "url": "https://youtu.be/cEadsbTeze4" },
    { "title": "L18. Implement LRU Cache", "url": "https://youtu.be/z9bJUPxzFOw" },
    { "title": "Implement LFU cache in C++/Java | Leetcode(Hard)", "url": "https://youtu.be/mzqHlAW7jeE" },
    { "title": "Major Announcement | TUF+ V2 and System Design Playlist 🔥", "url": "https://youtu.be/M4IHWsk-EAM" }
  ]
    },
    {
      "slug": "bhavani-cpp",
      "creator": "Bhavani Shankar",
      "topic": "C++ Basics",
      "language": "cpp",
      "thumbnail":"https://img.youtube.com/vi/4D9x-ZvSVnw/hqdefault.jpg",
      "videos": [
        { "title": "25 Days Challenge | C++ Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/4D9x-ZvSVnw" },
        { "title": "Day 1 : Introduction & Installation | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/dewbCtuNv-s" },
        { "title": "Day 2 : Basic Structure of C++ Program | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/2UMn3mDKc6A" },
        { "title": "Day 3 : Macros & Comments in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/ubjyLFCqfvc" },
        { "title": "Day 4 : Variables & Data Types in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/AGSgsauR46A" },
        { "title": "Day 5 : Input cin getline & Output cout in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/ngBx4DNH1Vo" },
        { "title": "Day 6 : Operators in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/YRhjoKwnW-Y" },
        { "title": "Day 7 : Conditionals in C++ | Nested if else Ladder | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/aiDPIN9PBik" },
        { "title": "Day 8 : Loops in C++ | For While Do While | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/WTByzP2V3nM" },
        { "title": "Day 9 : Functions in C++ | Parameters & Return Type | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/iZmbcC5G4wc" },
        { "title": "Day 10 : Function Overloading in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/SEfHXYuT9eU" },
        { "title": "Day 11 : Pointers in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/st0e-DkA4kc" },
        { "title": "Day 12 : Dynamic Memory Allocation in C++ | calloc malloc | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/hqowHokdD7g" },
        { "title": "Day 13 : Arrays in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/6ha4ZPHYYxE" },
        { "title": "Day 14 : 2D Arrays in C++ | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/R9yV5vykkH8" },
        { "title": "Day 15 : Strings in C++ | Character array & String Object | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/usxx_k0RaTg" },
        { "title": "Day 16 : OOPS in C++ | Classes and Objects | C++/Cpp Course in Telugu | Vamsi Bhavani", "url": "https://youtu.be/T9WZE3zG3Bs" },
        { "title": "Day 17 : Access Modifiers in C++ | Public Private Protected | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/eeFdDi7TThA" },
        { "title": "Day 18 : Constructors & Destructors in C++ | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/nBLiRWy-dW8" },
        { "title": "Day 19 : Inheritance in C++ | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/HUzsG7oJAYM" },
        { "title": "Day 20 : Operator Overloading in C++ | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/3D37TRUhf6Y" },
        { "title": "Day 21 : Abstraction in C++ | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/KYBo4B59i9Q" },
        { "title": "Day 22 : Friend Function in C++ | C++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/Etl1IQK46fw" },
        { "title": "Day 23 : Interfaces in C++ | Abstract Class Virtual Function | ++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/RIgDgzQhEl4" },
        { "title": "Day 24 : Exception Handling in C++ | try throw catch | ++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/44YUXO2Gb2k" },
        { "title": "Day 25 : C++ Course Revision | ++/Cpp Course Telugu | Vamsi Bhavani", "url": "https://youtu.be/hVDEkcujglc" }
      ]
    },
    {
      "slug": "apna-js",
      "creator": "Apna College",
      "topic": "JavaScript for Beginners",
      "language": "javascript",
      "thumbnail": "https://img.youtube.com/vi/ajdRvxDWH4w/hqdefault.jpg",
      "videos": [
        { "title": "JavaScript Full Course ❤️ | Variables & Data Types | Lecture 1", "url": "https://youtu.be/ajdRvxDWH4w" },
        { "title": "Lecture 2 : Operators and Conditional Statements | JavaScript Full Course", "url": "https://youtu.be/Zg4-uSjxosE" },
        { "title": "Lecture 3: Loops and Strings | JavaScript Full Course", "url": "https://youtu.be/UmRtFFSDSFo" },
        { "title": "Lecture 4: Arrays | JavaScript Full Course", "url": "https://youtu.be/gFWhbjzowrM" },
        { "title": "Lecture 5: Functions & Methods | JavaScript Full Course", "url": "https://youtu.be/P0XMXqDGttU" },
        { "title": "Lecture 6 : DOM - Document Object Model | JavaScript Full Course | Part 1", "url": "https://youtu.be/7zcXPCt8Ck0" },
        { "title": "Lecture 7 : DOM (Part 2) | Document Object Model | JavaScript Full Course", "url": "https://youtu.be/fXAGTOZ25H8" },
        { "title": "Lecture 8 : Events in JavaScript | JavaScript Full Course", "url": "https://youtu.be/_i-uLJAh79U" },
        { "title": "Imp Update : JavaScript YouTube Course | Shradha Ma'am", "url": "https://youtu.be/3rlEe1sP6N4" },
        { "title": "Lecture 9 : Tic Tac Toe Game in JavaScript | JS Project | JavaScript Full Course", "url": "https://youtu.be/SqrppLEljkY" },
        { "title": "Lecture 10 : MiniProject - Stone, Paper & Scissors Game | JavaScript Full Course", "url": "https://youtu.be/_V33HCZWLDQ" },
        { "title": "Lecture 11 : Classes & Objects | JavaScript Full Course", "url": "https://youtu.be/N-O4w6PynGY" },
        { "title": "Lecture 12 : Callbacks, Promises & Async Await | JavaScript Full Course", "url": "https://youtu.be/d3jXofmQm44" },
        { "title": "Last Lecture : Fetch API with Project | JavaScript Full Course", "url": "https://youtu.be/CyGodpqcid4" }
      ]
    },
    {
      "slug": "codewithharry-python",
      "creator": "CodeWithHarry",
      "topic": "Python Tutorial in Hindi",
      "language": "python",
      "thumbnail": "https://img.youtube.com/vi/7wnove7K-ZQ/hqdefault.jpg",
      "videos": [
  { "title": "Introduction to Programming & Python | Python Tutorial - Day #1", "url": "https://youtu.be/7wnove7K-ZQ?si=" },
  { "title": "Some Amazing Python Programs - The Power of Python | Python Tutorial - Day #2", "url": "https://youtu.be/Tto8TS-fJQU?si=" },
  { "title": "Modules and Pip | Python Tutorial - Day #3", "url": "https://youtu.be/xwKO_y2gHxQ?si=" },
  { "title": "Our First Python Program | Python Tutorial - Day #4", "url": "https://youtu.be/7IWOYhfAcVg?si=" },
  { "title": "Comments, Escape Sequences & Print Statement | Python Tutorial - Day #5", "url": "https://youtu.be/qxPMmW93eDs?si=" },
  { "title": "Variables and Data Types | Python Tutorial - Day #6", "url": "https://youtu.be/ORCuz7s5cCY?si=" },
  { "title": "Exercise 1: Calculator using Python | Python Tutorial - Day #7", "url": "https://youtu.be/FLVqcxnJP_E?si=" },
  { "title": "Exercise 1: Calculator using Python (Solution) | Python Tutorial - Day #8", "url": "https://youtu.be/dohaSBCKCr0?si=" },
  { "title": "Typecasting in Python | Python Tutorial - Day #9", "url": "https://youtu.be/Pu5bqySSSS0?si=" },
  { "title": "Taking User Input in Python | Python Tutorial - Day #10", "url": "https://youtu.be/WvG-R-xXouA?si=" },
  { "title": "Strings in Python | Python Tutorial - Day #11", "url": "https://youtu.be/kMNFQYArrLg?si=" },
  { "title": "Strings Slicing and Operations on Strings in Python | Python Tutorial - Day #12", "url": "https://youtu.be/8jW7lpT8HW8?si=" },
  { "title": "String Methods in Python | Python Tutorial - Day #13", "url": "https://youtu.be/0INvoK_T0cE?si=" },
  { "title": "If Else Conditional Statements in Python | Python Tutorial - Day #14", "url": "https://youtu.be/ceiuLR2ysas?si=" },
  { "title": "Exercise 2: Good Morning Sir | Python Tutorial - Day #15", "url": "https://youtu.be/d7ng_aV4qdI?si=" },
  { "title": "Match Case Statements in Python | Python Tutorial - Day #16", "url": "https://youtu.be/bthQCK1QAmQ?si=" },
  { "title": "For Loops in Python | Python Tutorial - Day #17", "url": "https://youtu.be/fIYVzKp0q5w?si=" },
  { "title": "While Loops in Python | Python Tutorial - Day #18", "url": "https://youtu.be/-tCFyIyKVx0?si=" },
  { "title": "break and continue in Python | Python Tutorial - Day #19", "url": "https://youtu.be/RkwJnjdrm70?si=" },
  { "title": "Functions in Python | Python Tutorial - Day #20", "url": "https://youtu.be/dyvxxJSGUsE?si=" },
  { "title": "Function Arguments in Python | Python Tutorial - Day #21", "url": "https://youtu.be/0d6b6fFuCkE?si=" },
  { "title": "Introduction to Lists in Python | Python Tutorial - Day #22", "url": "https://youtu.be/eF6nK5bSlmg?si=" },
  { "title": "List Methods in Python | Python Tutorial - Day #23", "url": "https://youtu.be/scWc3F8LbOo?si=" },
  { "title": "Tuples in Python | Python Tutorial - Day #24", "url": "https://youtu.be/PipsOUDKrVk?si=" },
  { "title": "Operations on Tuples in Python | Python Tutorial - Day #25", "url": "https://youtu.be/XblLSduioJI?si=" },
  { "title": "Exercise 2: Solution & Shoutouts | Python Tutorial - Day #26", "url": "https://youtu.be/IZBKXWrbqBM?si=" },
  { "title": "Exercise 3: Kaun Banega Crorepati (KBC) | Python Tutorial - Day #27", "url": "https://youtu.be/Vs1Z7K70Mvw?si=" },
  { "title": "f-strings in Python | Python Tutorial - Day #28", "url": "https://youtu.be/ixmxgUf8yIg?si=" },
  { "title": "Docstrings in Python | Python Tutorial - Day #29", "url": "https://youtu.be/SJzsNd7SM0g?si=" },
  { "title": "Recursion in Python | Python Tutorial - Day #30", "url": "https://youtu.be/XYwJKFB8DUk?si=" },
  { "title": "Sets in Python | Python Tutorial - Day #31", "url": "https://youtu.be/l3kCO8cVA6o?si=" },
  { "title": "Set Methods in Python | Python Tutorial - Day #32", "url": "https://youtu.be/HOrutCnp2zo?si=" },
  { "title": "Dictionaries in Python | Python Tutorial - Day #33", "url": "https://youtu.be/j2G68uQtOwM?si=" },
  { "title": "Dictionary Methods in Python | Python Tutorial - Day #34", "url": "https://youtu.be/LmbFwaLjT9k?si=" },
  { "title": "for Loop with else in Python | Python Tutorial - Day #35", "url": "https://youtu.be/qUkcIgErZzc?si=" },
  { "title": "Exception Handling in Python | Python Tutorial - Day #36", "url": "https://youtu.be/4LKo6dlku7M?si=" },
  { "title": "Finally keyword in Python | Python Tutorial - Day #37", "url": "https://youtu.be/r_iuC-IDpPM?si=" },
  { "title": "Raising custom errors in Python | Python Tutorial - Day #38", "url": "https://youtu.be/Phr4CNppYoM?si=" },
  { "title": "Kaun Banega Crorepati: Exercise 3 - Solution & Shoutouts | Python Tutorial - Day #39", "url": "https://youtu.be/nyfeYAxP-EM?si=" },
  { "title": "Exercise 4: Secret Code Language | Python Tutorial - Day #40", "url": "https://youtu.be/pOWJ6WgVRIU?si=" },
  { "title": "Short hand if else statements | Python Tutorial - Day #41", "url": "https://youtu.be/Qqx_zNmQVGI?si=" },
  { "title": "Enumerate Function in Python | Python Tutorial - Day #42", "url": "https://youtu.be/kGnYc_h1geM?si=" },
  { "title": "Virtual Environment in Python | Python Tutorial - Day #43", "url": "https://youtu.be/nt6LlFTWOkg?si=" },
  { "title": "How import works in Python | Python Tutorial - Day #44", "url": "https://youtu.be/Pr7UOr35NcI?si=" },
  { "title": "if __name__ == \"__main__\" in Python | Python Tutorial - Day #45", "url": "https://youtu.be/y_CX2Rvitk8?si=" },
  { "title": "os Module in Python | Python Tutorial - Day #46", "url": "https://youtu.be/dkVYSsL90Oo?si=" },
  { "title": "Exercise 4: Solutions and Shoutouts | Python Tutorial - Day #47", "url": "https://youtu.be/4lSQfOJKn7U?si=" },
  { "title": "Local vs Global Variables in Python| Python Tutorial - Day #48", "url": "https://youtu.be/RaG6GgcDt54?si=" },
  { "title": "File IO in Python | Python Tutorial - Day #49", "url": "https://youtu.be/eDBPlcWYses?si=" },
  { "title": "read(), readlines() and other methods | Python Tutorial - Day #50", "url": "https://youtu.be/l1FsnQxET9U?si=" },
  { "title": "seek(), tell() and other functions | Python Tutorial - Day #51", "url": "https://youtu.be/PByYX-2l5Us?si=" },
  { "title": "Lambda functions in Python | Python Tutorial - Day #52", "url": "https://youtu.be/UfFWf-PXUqE?si=" },
  { "title": "Map, Filter and Reduce in Python | Python Tutorial - Day #53", "url": "https://youtu.be/OErhjT4f5Cs?si=" },
  { "title": "'is' vs '==' in Python | Python Tutorial - Day #54", "url": "https://youtu.be/TOemdfX_0xc?si=" },
  { "title": "Exercise 5 - Snake Water Gun | Python Tutorial - Day #55", "url": "https://youtu.be/dDsh7FT6-0I?si=" },
  { "title": "Introduction to OOPs in Python | Python Tutorial - Day #56", "url": "https://youtu.be/HQnoYzxOHMw?si=" },
  { "title": "Classes and Objects in Python | Python Tutorial - Day #57", "url": "https://youtu.be/a7baAGCBA9U?si=" },
  { "title": "Constructors in Python | Python Tutorial - Day #58", "url": "https://youtu.be/12HRkYld22c?si=" },
  { "title": "Decorators in Python | Python Tutorial - Day #59", "url": "https://youtu.be/PTBZ674EsvI?si=" },
  { "title": "Getters and Setters in Python | Python Tutorial - Day #60", "url": "https://youtu.be/2gbCT8h9uyk?si=" },
  { "title": "Inheritance in Python | Python Tutorial - Day #61", "url": "https://youtu.be/-KsfUaQEY9Y?si=" },
  { "title": "Access Modifiers in Python | Python Tutorial - Day #62", "url": "https://youtu.be/43FK20rWvKQ?si=" },
  { "title": "Snake Water Gun Game in Python - Exercise 5 - Solution | Python Tutorial - Day #63", "url": "https://youtu.be/GkfBpm6MN9A?si=" },
  { "title": "Exercise 6 - Library Management System in Python | Python Tutorial - Day #64", "url": "https://youtu.be/mlDZTSH2FFc?si=" },
  { "title": "Static Methods in Python | Python Tutorial - Day #65", "url": "https://youtu.be/GcSVYNSsJxo?si=" },
  { "title": "Instance variables vs Class variables in Python | Python Tutorial - Day #66", "url": "https://youtu.be/tQdaeiF4j38?si=" },
  { "title": "Exercise 6 Solution - Library Management Software in Python | Python Tutorial - Day #67", "url": "https://youtu.be/uRIEjf2vCIg?si=" },
  { "title": "Exercise 7 - Clear the Clutter | Python Tutorial - Day #68", "url": "https://youtu.be/6KvnP13TnhY?si=" },
  { "title": "Class Methods in Python | Python Tutorial - Day #69", "url": "https://youtu.be/9ynmDLc5FYo?si=" },
  { "title": "Class Methods as Alternative Constructors in Python | Python Tutorial - Day #70", "url": "https://youtu.be/FGlKJdy--p8?si=" },
  { "title": "dir, __dict__ and help method in Python | Python Tutorial - Day #71", "url": "https://youtu.be/Wgo9TaBcuJ4?si=" },
  { "title": "super keyword in Python | Python Tutorial - Day #72", "url": "https://youtu.be/P648reefNh0?si=" },
  { "title": "Magic/Dunder Methods in Python | Python Tutorial - Day #73", "url": "https://youtu.be/DmgQVJXhuLQ?si=" },
  { "title": "Method Overriding in Python | Python Tutorial - Day #74", "url": "https://youtu.be/46_yfYC36JY?si=" },
  { "title": "Exercise 7 Solution + Shoutouts | Python Tutorial - Day #75", "url": "https://youtu.be/Wt9Shnzv_Yg?si=" },
  { "title": "Exercise 8 - Merge the PDF | Python Tutorial - Day #76", "url": "https://youtu.be/uUbvJ7ZEhPE?si=" },
  { "title": "Operator Overloading in Python | Python Tutorial - Day #77", "url": "https://youtu.be/D67-b2t-y4k?si=" },
  { "title": "Single Inheritance in Python | Python Tutorial - Day #78", "url": "https://youtu.be/U53_Gw55NI8?si=" },
  { "title": "Multiple Inheritance in Python | Python Tutorial - Day #79", "url": "https://youtu.be/4o7xSHgKlvI?si=" },
  { "title": "Multilevel Inheritance in Python | Python Tutorial - Day #80", "url": "https://youtu.be/Il7XMJJeXiA?si=" },
  { "title": "Hybrid and Hierarchical Inheritance in Python | Python Tutorial - Day #81", "url": "https://youtu.be/B4Q8zxRkm_I?si=" },
  { "title": "Exercise 8 - Merge the Pdf Solution in Python | Python Tutorial - Day #82", "url": "https://youtu.be/qKKGemhBRVM?si=" },
  { "title": "Exercise 9 - Shoutouts to Everyone | Python Tutorial - Day #83", "url": "https://youtu.be/1WjwnlRXfHc?si=" },
  { "title": "Time Module in Python | Python Tutorial - Day #84", "url": "https://youtu.be/oTtIvV-Q1FY?si=" },
  { "title": "Creating command line utility in python | Python Tutorial - Day #85", "url": "https://youtu.be/3IAu6-pgw7I?si=" },
  { "title": "Walrus Operator in Python | Python Tutorial - Day #86", "url": "https://youtu.be/NCmMEEyzLT8?si=" },
  { "title": "Shutil Module in Python | Python Tutorial - Day #87", "url": "https://youtu.be/wII2JhNACJE?si=" },
  { "title": "Exercise 9: Solution - Shoutouts to Everyone | Python Tutorial - Day #88", "url": "https://youtu.be/C9VP-56RXNM?si=" },
  { "title": "Requests Module in Python | Python Tutorial - Day #89", "url": "https://youtu.be/Nsb3bLIlO4w?si=" },
  { "title": "Exercise 10: News App in Python | Python Tutorial - Day #90", "url": "https://youtu.be/BGzFp9mwFQ4?si=" },
  { "title": "Generators in Python | Python Tutorial - Day #91", "url": "https://youtu.be/ixd-u3pmsUc?si=" },
  { "title": "Function Caching in Python | Python Tutorial - Day #92", "url": "https://youtu.be/K8gjSwc3Rlo?si=" },
  { "title": "Exercise 10 - News App Solution & Shoutout | Python Tutorial - Day #93", "url": "https://youtu.be/bnAz7Kb2efE?si=" },
  { "title": "Exercise 11 - Drink Water Reminder | Python Tutorial - Day #94", "url": "https://youtu.be/1i4piFhpnm8?si=" },
  { "title": "Regular Expressions in Python | Python Tutorial - Day #95", "url": "https://youtu.be/TCWOwavqFrw?si=" },
  { "title": "AsyncIO in Python | Python Tutorial - Day #96", "url": "https://youtu.be/lgoB3_-ejnI?si=" },
  { "title": "Multithreading in Python | Python Tutorial - Day #97", "url": "https://youtu.be/ICbU6zAKtqQ?si=" },
  { "title": "MultiProcessing in Python | Python Tutorial - Day #98", "url": "https://youtu.be/zGe-9LfnAaA?si=" },
  { "title": "Exercise 11: Solution + Shoutouts - Desktop Notification System | Python Tutorial - Day #99", "url": "https://youtu.be/18vZnLqXMoM?si=" },
  { "title": "Conclusion and Where to go from here | Python Tutorial - Day #100", "url": "https://youtu.be/5Pz8WGiMJ_c?si=" }
]
    },
    {
      "slug": "loveybabbar-dsa",
      "creator": "Love Babbar",
      "topic": "450 DSA Series",
      "language": "cpp",
      "thumbnail": "https://img.youtube.com/vi/WQoB2z67hvY/hqdefault.jpg",
      
"videos": [
  { "title": "Lecture 1: Intro to Programming & Flowcharts", "url": "https://youtu.be/WQoB2z67hvY?si=" },
  { "title": "Lecture 2: Write Your First Program in C++", "url": "https://youtu.be/t6zLJOCVqD0?si=" },
  { "title": "Lecture 3: If-Else, While loop & Lots of Patterns (Part-1)", "url": "https://youtu.be/WR31ByTzAVQ?si=" },
  { "title": "Lecture 4: Solving Pattern Questions (Part-2)", "url": "https://youtu.be/dr-pLeJBr38?si=" },
  { "title": "Lecture 5: Bitwise Operators, For Loops, Operator Precedence & Variable Scoping", "url": "https://youtu.be/yjdQHb2elqI?si=" },
  { "title": "Lecture 6: Binary & Decimal Number System", "url": "https://youtu.be/bWrsk0QizEk?si=" },
  { "title": "Lecture 7: LeetCode Problem Solving Session", "url": "https://youtu.be/0fwrMYPcGQ0?si=" },
  { "title": "Lecture 8: Switch Statement & Functions", "url": "https://youtu.be/8nNqk2NPbRA?si=" },
  { "title": "Lecture 9: Introduction to Arrays in C++", "url": "https://youtu.be/sNrLlmOIn-c?si=" },
  { "title": "Lecture 10: Solving LeetCode/CodeStudio Questions [Arrays]", "url": "https://youtu.be/oVa8DfUDKTw?si=" },
  { "title": "Lecture 11:Time & Space Complexity || How to avoid Time Limit Exceeded [TLE]", "url": "https://youtu.be/QovOdd80A4s?si=" },
  { "title": "Lecture 12: Binary Search Explained in 1 Video [Theory + Code]", "url": "https://youtu.be/YJeoQBevNVo?si=" },
  { "title": "Lecture 13: Binary Search Interview Questions [Google, Amazon, Microsoft] || ProblemSet - 1", "url": "https://youtu.be/zD2Jg3alZV8?si=" },
  { "title": "Lecture14: Binary Search Interview Questions [Google, Amazon, Microsoft] || ProblemSet - 2", "url": "https://youtu.be/6z2HK4o8qcU?si=" },
  { "title": "Lecture 15: Book Allocation Problem || Aggressive Cows Problem || Binary Search Advanced Problems", "url": "https://youtu.be/YTTdLgyqOLY?si=" },
  { "title": "Lecture16: Selection Sort [Theory + Code] || C++ Placement Series", "url": "https://youtu.be/UdO2NeHB46c?si=" },
  { "title": "CodeHelp Weekly Contest 1 is LIVE || Game starts Now", "url": "https://youtu.be/vpltlIwq9OY?si=" },
  { "title": "Lecture 17: BUBBLE SORT in 1 Video [Theory + Optimised Code] || Best/Worst Case Complexity", "url": "https://youtu.be/zOhUavxlzw4?si=" },
  { "title": "Lecture 18: INSERTION SORT in 1 Video [Theory + Code] || Best/Worst Case Complexity", "url": "https://youtu.be/7kIVfVY6Axk?si=" },
  { "title": "Lecture19: C++ STL in 1 Video (Re-Uploaded)", "url": "https://youtu.be/WgMPrLX-zsA?si=" },
  { "title": "Lecture 20: Solving LeetCode/CodeStudio Questions [Arrays]", "url": "https://youtu.be/MPvr-LmaZmA?si=" },
  { "title": "Lecture21: Solving LeetCode/CodeStudio Questions [Arrays]", "url": "https://youtu.be/Z7_nMTHROZo?si=" },
  { "title": "CodeHelp Weekly Contest 2 is LIVE || Contest 1 Results announced", "url": "https://youtu.be/HL9WcjdEqmI?si=" },
  { "title": "Lecture22: All about Char Arrays, Strings & solving LeetCode Questions", "url": "https://youtu.be/Wdjr6uoZ0e0?si=" },
  { "title": "Lecture 23: Introduction to 2D Arrays in C++ || LeetCode Questions", "url": "https://youtu.be/1CdolnvxLs0?si=" },
  { "title": "Lecture 24: Basic Maths for DSA || Sieve || Modular Arithmetics || Euclid's Algorithm", "url": "https://youtu.be/KdePjukNs98?si=" },
  { "title": "DSA Placement course || Phase-1 Completed", "url": "https://youtu.be/ac7ii_XfoRI?si=" },
  { "title": "Lecture 25: Pointers in C++ || Part-1 || DSA Placement Course - Love Babbar", "url": "https://youtu.be/YHwEIfrXZgE?si=" },
  { "title": "Lecture 26: Pointers in C++ || Part-2 || DSA Placement Course - Love Babbar", "url": "https://youtu.be/rlpw7oi-bpE?si=" },
  { "title": "Lecture27: Double Pointers in C++ || Pointers Practice MCQs", "url": "https://youtu.be/P0UsAxtXq2Y?si=" },
  { "title": "Lecture28: Reference Variable | Static vs Dynamic Memory | Part-1", "url": "https://youtu.be/MMO2c57XHzM?si=" },
  { "title": "Lecture29: Dynamic Memory Allocation of 2D Arrays", "url": "https://youtu.be/LlqgWQgm58g?si=" },
  { "title": "Lecture30: Macros, Global Variables, Inline Functions & Default Args", "url": "https://youtu.be/0TEvaAiqo8Y?si=" },
  { "title": "Lecture 31: Learning Recursion the Best Way! | 10 Day Recursion Challenge", "url": "https://youtu.be/_-2u4EPHD88?si=" },
  { "title": "Lecture32: Understanding Recursion the easiest way || Day-2 || 10 Day Recursion Challenge", "url": "https://youtu.be/zg8Y1oE4qYQ?si=" },
  { "title": "Lecture33: Recursion and Binary Search | Day-3 | 10 Days Recursion Challenge", "url": "https://youtu.be/UntSI7G5h20?si=" },
  { "title": "Lecture34: Recursion with Strings | Day-4 | 10 Day Recursion Challenge", "url": "https://youtu.be/WyY2Af3k1xI?si=" },
  { "title": "Lecture35: Merge Sort using Recursion | Day-5 | 10 Day Recursion Challenge", "url": "https://youtu.be/cdHEpbBVjRM?si=" },
  { "title": "CodeHelp Weekly Contest 3 is LIVE || Contest 1 & 2 Gifts Sent !!", "url": "https://youtu.be/pUd_ubxlwIM?si=" },
  { "title": "Lecture36: Quick Sort using Recursion | Day-6 | 10 Day Recursion Challenge", "url": "https://youtu.be/sNaHN4tZmRk?si=" },
  { "title": "Lecture37: Recursion - Subsets / Subsequences of String [Theory + Code]", "url": "https://youtu.be/V0IgCltYgg4?si=" },
  { "title": "Lecture38: Phone Keypad Problem Recursion || C++ Placement Course", "url": "https://youtu.be/tWnHbSHwNmA?si=" },
  { "title": "Lecture39: Permutations of a String || C++ Placement Course", "url": "https://youtu.be/va3NEycUxsg?si=" },
  { "title": "Lecture40: Rat in a Maze Problem || C++ Placement Course 2022", "url": "https://youtu.be/GqtyVD-x_jY?si=" },
  { "title": "Lecture 41: Time & Space Complexity of Recursive Algorithms || C++ Placement Course", "url": "https://youtu.be/BYCeh76OASc?si=" },
  { "title": "Lecture 42: OOPs Concepts in C++ || Part-1", "url": "https://youtu.be/i_5pvt7ag7E?si=" },
  { "title": "Lecture 43 : 4 Pillars of OOPs Concept -Inheritance, Polymorphism, Encapsulation & Abstraction", "url": "https://youtu.be/b3GccK5_KSQ?si=" },
  { "title": "Lecture 44: Linked List & its types - Singly, Doubly, Circular etc.", "url": "https://youtu.be/q8gdBn9RPeI?si=" },
  { "title": "Lecture 45: Linked List Questions: Reverse LL and find Middle of LL", "url": "https://youtu.be/vqS1nVQdCJM?si=" },
  { "title": "CodeHelp Weekly Contest 4 is LIVE || Contest Editorial/Solutions", "url": "https://youtu.be/JFtQP4itvqo?si=" },
  { "title": "Lecture 46: Linked List Questions: Reverse LL in \"K group\" && Check LL is Circular or not", "url": "https://youtu.be/fi2vh0nQLi0?si=" },
  { "title": "Lecture47: Detect & Remove Loop in Linked List [Approach Discussion + Optimised Implementation]", "url": "https://youtu.be/VxOFflTXlXo?si=" },
  { "title": "Lecture 48: Remove Duplicates from a Sorted/UnSorted Linked List", "url": "https://youtu.be/7pgs-wT5d4c?si=" },
  { "title": "Lecture 49: Merge 2 Sorted Linked Lists || Sort 0s, 1s and 2s in Linked List", "url": "https://youtu.be/ogmBt6f9hw8?si=" },
  { "title": "Lecture 50: Check Palindrome in Linked List || C++ Placement Course", "url": "https://youtu.be/aD7mBVnKFEU?si=" },
  { "title": "Lecture 51: Add 2 Numbers represented by Linked Lists || C++ Placement Course", "url": "https://youtu.be/HiRlTPf9aCg?si=" },
  { "title": "Lecture 52: Clone a Linked List with Random Pointers || C++ Placement Course", "url": "https://youtu.be/83mPr0i56Gg?si=" },
  { "title": "Lecture 53: Merge Sort in Linked List [ Theory + Implementation ]", "url": "https://youtu.be/rM5EEA_rbNY?si=" },
  { "title": "Lecture 54: Introduction to Stacks [Theory + Implementation] || C++ Placement Course", "url": "https://youtu.be/_6COl6V6mng?si=" },
  { "title": "Lecture 55: Stack Interview Questions || Placement Series by Love Babbar", "url": "https://youtu.be/BmZnJehDzyU?si=" },
  { "title": "Lecture 56: Largest Rectangular Area in Histogram [Optimised Approach]", "url": "https://youtu.be/lJLcqDsmYfg?si=" },
  { "title": "Lecture 57: Stack - Celebrity Problem && Max Rectangle in Binary Matrix with all 1's", "url": "https://youtu.be/9u2BJfmWNEg?si=" },
  { "title": "Lecture 58: \"N\" Stacks in an Array || Stack Hard Question", "url": "https://youtu.be/lrSXKLmnMV8?si=" },
  { "title": "Lecture 59: Design Special Stack Problem || C++ Placement Course", "url": "https://youtu.be/OpwYmEBcPh0?si=" },
  { "title": "Lecture 60: Queues in C++ [STL + Implementation + Types of Queues ]", "url": "https://youtu.be/W7uB9-TKfTg?si=" },
  { "title": "Lecture 61: Queue FAANG Interview Questions || Placement Series by Love Babbar", "url": "https://youtu.be/_gJ3to4RyeQ?si=" },
  { "title": "Lecture 62: Binary Trees & its Representation || Different types of Traversals", "url": "https://youtu.be/5NiXlPrLslg?si=" },
  { "title": "CodeHelp Weekly Contest 5 is LIVE || Contest Editorial/Solutions", "url": "https://youtu.be/f5BkKDTXABg?si=" },
  { "title": "Lecture 63: Binary Tree FAANG Interview Questions || Part-1", "url": "https://youtu.be/nHMQ33LZ6oA?si=" },
  { "title": "Lecture 64: Binary Tree FAANG Interview Questions || Part-2", "url": "https://youtu.be/s1d8UGDCCN8?si=" },
  { "title": "Lecture 65: Binary Tree FAANG Interview Questions || Part-3", "url": "https://youtu.be/QG0hE0R_ng4?si=" },
  { "title": "Lecture 66: Construct a Binary Tree from InOrder/PreOrder/PostOrder Traversal", "url": "https://youtu.be/ffE1xj51EBQ?si=" },
  { "title": "Lecture 67: Minimum Time to BURN the Entire Binary Tree || C++ Placement Series", "url": "https://youtu.be/XLdpy0_6MR4?si=" },
  { "title": "Lecture 68: Morris Traversal || Flatten a Binary tree to Linked List || C++ Placement Series", "url": "https://youtu.be/2BdY9fixMrM?si=" },
  { "title": "Lecture 69: Binary Search Tree & its Implementation || Insertion, Deletion & Searching a Node", "url": "https://youtu.be/UeRUKRJvPa4?si=" },
  { "title": "Lecture 70: Binary SearchTree FAANG Interview Questions || Part-1", "url": "https://youtu.be/pDURIj98e0I?si=" },
  { "title": "Lecture 71: Binary SearchTree FAANG Interview Questions || Part-2", "url": "https://youtu.be/IGHyX15fLI8?si=" },
  { "title": "Lecture 72: Merge 2 Binary Search Trees || C++ Placement Series", "url": "https://youtu.be/18w8VduomfI?si=" },
  { "title": "Lecture 73: Largest BST in a Binary Tree || C++ Placement Series", "url": "https://youtu.be/fqx8z3VepMA?si=" },
  { "title": "Lecture 74: Heaps in C++ || Heap Sort || Insertion/Deletion in Heap || Priority Queue STL", "url": "https://youtu.be/NKJnHewiGdc?si=" },
  { "title": "Lecture 75: Heaps in C++ || Interview Questions || Part - 1", "url": "https://youtu.be/_9F2VgZcvdw?si=" },
  { "title": "CodeHelp Weekly Contest 6 is LIVE || MacBook Giveaway Coming Soon", "url": "https://youtu.be/m6olKeiItrI?si=" },
  { "title": "Lecture 76: Heaps in C++ || Interview Questions || Part - 2", "url": "https://youtu.be/eccAKrmffh8?si=" },
  { "title": "Lecture 77: Heaps Hard Interview Questions || Part - 3", "url": "https://youtu.be/RrxpTWqj97A?si=" },
  { "title": "Lecture 78: Hashmaps in C++ || C++ Placement Series", "url": "https://youtu.be/7mUKGHznpfg?si=" },
  { "title": "CodeHelp Weekly Contest 7 is LIVE", "url": "https://youtu.be/IFv1anmkOi0?si=" },
  { "title": "Lecture 79: Trie & its Implementation || C++ Placement Series", "url": "https://youtu.be/Y6dOuGjwsxU?si=" },
  { "title": "Lecture 80: Longest Common Prefix Problem || Tries || C++ Placement Series", "url": "https://youtu.be/VTr3Nh7BadI?si=" },
  { "title": "Lecture 81: Implement a Phone Directory Using Trie || C++ Placement Series", "url": "https://youtu.be/SK2S5lQegVg?si=" },
  { "title": "Lecture 82: Rat in Maze Problem || Backtracking Day 1 || C++ Placement Series", "url": "https://youtu.be/wjqSZy4pMT4?si=" },
  { "title": "Lecture 83: N-Queen Problem || Backtracking Day 2 || C++ Placement Series", "url": "https://youtu.be/9wEwqNdOAVQ?si=" },
  { "title": "Lecture 84: Sudoku Solver Problem || Backtracking Day 3 || C++ Placement Series", "url": "https://youtu.be/8lWxaRviJBA?si=" },
  { "title": "Lecture 85: Introduction to Graphs || Creation and Implementation", "url": "https://youtu.be/EaK6aslcC5g?si=" },
  { "title": "Lecture 86: BFS Traversal in Graph || C++ Placement Series", "url": "https://youtu.be/b5kij1Akf9I?si=" },
  { "title": "Lecture 87: DFS Traversal in Graph || C++ Placement Series", "url": "https://youtu.be/aJa3U-hydXc?si=" },
  { "title": "Lecture 88: Cycle Detection in Undirected Graphs || Using BFS and DFS", "url": "https://youtu.be/1cSzxlhxOw8?si=" },
  { "title": "Lecture 89: Cycle Detection in Directed Graphs || Placement Series", "url": "https://youtu.be/Tl5qbEmEQyY?si=" },
  { "title": "Lecture 90: Topological Sort ( Using DFS ) || Placement Series", "url": "https://youtu.be/T_boOrr0rvk?si=" },
  { "title": "Lecture 91: Topological Sort ( Using Kahn's Algorithm )  || Placement Series", "url": "https://youtu.be/6XmzL04mlgQ?si=" },
  { "title": "CodeHelp Weekly Contest 9 is LIVE || C++ Placement Series", "url": "https://youtu.be/-q6VwO3QH74?si=" },
  { "title": "Lecture 92: Cycle Detection in Directed Graph || Using BFS", "url": "https://youtu.be/X2_tYUuthH8?si=" },
  { "title": "Lecture 93: Shortest Path in Undirected Graphs || C++ Placement Series", "url": "https://youtu.be/abIEXKFpLNE?si=" },
  { "title": "Lecture 94: Shortest Path in Directed Acyclic Graphs || C++ Placement Series", "url": "https://youtu.be/P_bfy0LOU5g?si=" },
  { "title": "Lecture 95: Dijkstra's Algorithm || C++ Placement Series", "url": "https://youtu.be/dVUR3Rm6biE?si=" },
  { "title": "Lecture 96: Minimum Spanning Tree || Prim's Algorithm", "url": "https://youtu.be/rnYBi9N_vw4?si=" },
  { "title": "Lecture 97: Kruskal's Algorithm || Disjoint Set || Union by Rank & Path Compression", "url": "https://youtu.be/KxLtIrCyXwE?si=" },
  { "title": "Lecture 98: Bridges in a Graph || C++ Placement Series", "url": "https://youtu.be/CiDPT1xMKI0?si=" },
  { "title": "Lecture 99: Articulation Points in Graphs || C++ Placement Series", "url": "https://youtu.be/fqkqx6OBRDE?si=" },
  { "title": "Lecture 100: Kosaraju's Algorithm for Strongly Connected Components || C++ Placement Series", "url": "https://youtu.be/ndfjV_yHpgQ?si=" },
  { "title": "Lecture 101: Bellman Ford Algorithm || C++ Placement Series", "url": "https://youtu.be/ijpVpsmpJtQ?si=" },
  { "title": "Lecture 102: Introduction to Dynamic Programming | Memoization | Tabulation | Space Optimisation", "url": "https://youtu.be/PGsgv6nXhLw?si=" },
  { "title": "Lecture 103: Minimum Cost Climbing Stairs || DP Series", "url": "https://youtu.be/S31W3kohFDk?si=" },
  { "title": "Lecture 104: Minimum Number of Coins || DP Series", "url": "https://youtu.be/A3FHNCAkhxE?si=" },
  { "title": "Lecture 105: Maximum Sum of Non-Adjacent Elements || DP Series", "url": "https://youtu.be/m9-H6AUBLgY?si=" },
  { "title": "Lecture 106: House Robbery Problem || DP Series", "url": "https://youtu.be/Fe2GeXEzWM0?si=" },
  { "title": "Lecture 107: Cut Rod into Segments of X, Y, Z || DP Series", "url": "https://youtu.be/MFAAZW2znv8?si=" },
  { "title": "Lecture 108: Count derangements  || DP Series", "url": "https://youtu.be/NW-BLDQHFXk?si=" },
  { "title": "Lecture 109: Painting Fence Algorithm || DP Series", "url": "https://youtu.be/5eFh5CC-8KY?si=" },
  { "title": "Lecture 110: 0/1 KnapSack Problem || learn 2-D DP Concept || DP Series", "url": "https://youtu.be/xdPv2SZJLVI?si=" },
  { "title": "Lecture 111: Combination Sum IV Problem || DP Series", "url": "https://youtu.be/Wct0mN2SCRQ?si=" },
  { "title": "Lecture 112: Perfect Squares Problem || DP Series", "url": "https://youtu.be/aJTCcyPrPOA?si=" },
  { "title": "Lecture 113: Minimum Cost for Tickets || Part-1 || DP Series", "url": "https://youtu.be/oZ_xAIGCXw4?si=" },
  { "title": "Lecture 114: Minimum Cost for Tickets || Part-2 || DP Series", "url": "https://youtu.be/U5f__4we_Jc?si=" },
  { "title": "Lecture 115: Largest Square area in Matrix || DP Series", "url": "https://youtu.be/MMr19RE7KYY?si=" },
  { "title": "Lecture 116: Min Score Triangulation of Polygon || DP Series", "url": "https://youtu.be/Eo4G_LPCgX8?si=" },
  { "title": "Lecture 117: Minimum Sideways Jump LeetCode || 2D-DP || DP Series", "url": "https://youtu.be/dvTTtzamEEo?si=" },
  { "title": "Lecture 118: Reducing Dishes LeetCode || 2D-DP || DP Series", "url": "https://youtu.be/_iGlRDLPLxM?si=" },
  { "title": "Lecture 119: Longest Increasing Subsequence + Russian Doll LeetCode || DP + Binary Search", "url": "https://youtu.be/MYHajVcnXSA?si=" },
  { "title": "Lecture 120: Maximum Height by Stacking Cuboid || DP Series", "url": "https://youtu.be/Ntzuz7XsdCI?si=" },
  { "title": "Lecture 121: Pizza with 3n Slices || 2D - DP || DP Series", "url": "https://youtu.be/QZ9edJ0JCPw?si=" },
  { "title": "Lecture 122: Number of Dice Rolls with Target Sum || DP Series", "url": "https://youtu.be/XY297u8qRDI?si=" },
  { "title": "Lecture 123: Partition Equal Subset Sum || DP Series", "url": "https://youtu.be/UGY7FMHt-M8?si=" },
  { "title": "Lecture 124: Minimum Swaps to make Subsequences Increasing || DP Series", "url": "https://youtu.be/IeT9Qz_vqHo?si=" },
  { "title": "Lecture 125: Longest Arithmetic Subsequence || DP Series", "url": "https://youtu.be/YaMcX7sem70?si=" },
  { "title": "Lecture 126: Longest AP with given Difference \"d\" || DP Series", "url": "https://youtu.be/IOOFHFXenQU?si=" },
  { "title": "Lecture 127: Unique Binary Search Trees || Catalan Number", "url": "https://youtu.be/ox7fOk3HjlA?si=" },
  { "title": "Lecture 128: Guess Number Higher or Lower || DP Series", "url": "https://youtu.be/x--bMzT1Xhk?si=" },
  { "title": "Lecture 129: Minimum Cost Tree From Leaf Values || DP Series", "url": "https://youtu.be/LDiD9fr28tc?si=" },
  { "title": "Lecture 130: Buy and Sell Stock [Part 1] || DP Series", "url": "https://youtu.be/BSRTUtvJSIk?si=" },
  { "title": "Lecture 131: Buy and Sell Stock [Part 2] || DP Series", "url": "https://youtu.be/dlKGCNVel6A?si=" },
  { "title": "Lecture 132: Buy and Sell Stock [Part 3] || DP Series", "url": "https://www.youtube.com/watch?v=NW7XRzg3smo" },
  { "title": "Lecture 133: Buy and Sell Stock [Part 4] || DP Series", "url": "https://www.youtube.com/watch?v=tuhjovVtDII" },
  { "title": "Lecture 134: Buy and Sell Stock [Part 5] || DP Series", "url": "https://www.youtube.com/watch?v=KFqhgQeQAXc" },
  { "title": "Lecture 135: Longest Common Subsequence || DP on Strings", "url": "https://www.youtube.com/watch?v=y1b8pObvndA" },
  { "title": "Lecture 136: Longest Palindromic Subsequence || DP on Strings", "url": "https://www.youtube.com/watch?v=U095bJJtW3w" },
  { "title": "Lecture 137: EDIT Distance || DP on Strings", "url": "https://www.youtube.com/watch?v=8HEjwf28LyE" },
  { "title": "Lecture 138: Maximum Rectangle with all 1's || DP Series", "url": "https://www.youtube.com/watch?v=IPT6emqnxg8" },
  { "title": "Lecture 139: Wildcard Pattern Matching || DP Series", "url": "https://www.youtube.com/watch?v=OgovJ9CB0hI" },
  { "title": "Lecture 140: GREEDY ALGORITHMS in 1 VIDEO", "url": "https://www.youtube.com/watch?v=HZOUwKCKF5o" }
      ]
    },
    {
      "slug": "telusko-java",
      "creator": "Telusko",
      "topic": "Java for Beginners",
      "language": "java",
      "thumbnail": "https://img.youtube.com/vi/bm0OyhwFDuY/hqdefault.jpg",
      "videos": [
  { "title": "#1 Java Introduction", "url": "https://youtu.be/bm0OyhwFDuY?si=" },
  { "title": "#2 Java Development Kit (JDK) Setup", "url": "https://youtu.be/WRISYpKhIrc?si=" },
  { "title": "#3 First Code in Java", "url": "https://youtu.be/tSqNBjGacYk?si=" },
  { "title": "New Course Announcement Java Spring Boot AI Course", "url": "https://youtu.be/QD_d-dEZWho?si=" },
  { "title": "#4 How Java Works", "url": "https://youtu.be/NHrsLjhjmi4?si=" },
  { "title": "#5 Variables in Java", "url": "https://youtu.be/9RCuKrze_-k?si=" },
  { "title": "#6 Data types in Java", "url": "https://youtu.be/Le25I331_yU?si=" },
  { "title": "#7 Literal in Java", "url": "https://youtu.be/iZXLCM5bzRI?si=" },
  { "title": "#8 Type Conversion in Java", "url": "https://youtu.be/CPk8pffKV64?si=" },
  { "title": "#9 Arithmetic Operators in Java", "url": "https://youtu.be/flWjzwzgybI?si=" },
  { "title": "Premium Java and spring boot Courses", "url": "https://youtu.be/ifu2UlqIoYM?si=" },
  { "title": "#10 Relational Operators in Java", "url": "https://youtu.be/TEJpeRI_NEo?si=" },
  { "title": "#11 Logical Operators in Java", "url": "https://youtu.be/hLimYJZQ2kc?si=" },
  { "title": "#12 If else in Java", "url": "https://youtu.be/74Q7POjS7mQ?si=" },
  { "title": "#13 If Else If in Java", "url": "https://youtu.be/Tn6BNLD0PmU?si=" },
  { "title": "#14 Ternary Operator in Java", "url": "https://youtu.be/kBdZBbWZ2a4?si=" },
  { "title": "#15 Switch Statement in Java", "url": "https://youtu.be/IrQKDdptiw8?si=" },
  { "title": "What's new in Java Switch | Switch Statement and Expression", "url": "https://youtu.be/AZb1wLIQ1R4?si=" },
  { "title": "#16 Need For Loop in Java", "url": "https://youtu.be/mh3sTmXWMLE?si=" },
  { "title": "#17 While Loop in Java", "url": "https://youtu.be/mzt5tmV7wxI?si=" },
  { "title": "#18 Do While Loop in Java", "url": "https://youtu.be/zzBVTwpfYr0?si=" },
  { "title": "#19 For Loop in Java", "url": "https://youtu.be/gu6Agiy2xBg?si=" },
  { "title": "#20 Which Loop To Use in java", "url": "https://youtu.be/uO5nSTJ9Iz4?si=" },
  { "title": "#21 Class And Object Theory in Java", "url": "https://youtu.be/Znmz_WxMxp4?si=" },
  { "title": "#22 Class and Object Practical in Java", "url": "https://youtu.be/3yOLNV9BF8A?si=" },
  { "title": "#23 JDK JRE JVM in Java", "url": "https://youtu.be/s7UgQ7_1KQY?si=" },
  { "title": "#24 Methods in Java", "url": "https://youtu.be/KSS3MUbBWLk?si=" },
  { "title": "#25 Method Overloading in Java", "url": "https://youtu.be/KpwBVAYbPDA?si=" },
  { "title": "#26 Stack And Heap in Java", "url": "https://youtu.be/_GK3WoFFKUE?si=" },
  { "title": "#27 Need of an Array in Java", "url": "https://youtu.be/uidBSlGLUK4?si=" },
  { "title": "#28 Creation of Array in Java", "url": "https://youtu.be/239ubH043lI?si=" },
  { "title": "#29 Multi Dimensional Array in Java", "url": "https://youtu.be/v4J2bEQF6jk?si=" },
  { "title": "#30 jagged and 3D Array in Java", "url": "https://youtu.be/IPBK2VdSNX0?si=" },
  { "title": "#31 Drawbacks of Array in Java", "url": "https://youtu.be/82z4XJx6y3M?si=" },
  { "title": "#32 Array of Objects in Java", "url": "https://youtu.be/2j64wdFNWyE?si=" },
  { "title": "#33 Enhanced for Loop in Java", "url": "https://youtu.be/KcJX6XGmB-o?si=" },
  { "title": "#34 What is String in Java", "url": "https://youtu.be/cV-sOpOgof8?si=" },
  { "title": "#35 Mutable vs Immutable String in Java", "url": "https://youtu.be/JjIewPuyexA?si=" },
  { "title": "#36 StringBuffer and StringBuilder in Java", "url": "https://youtu.be/WQ4aA4-MESE?si=" },
  { "title": "#37 Static Variable in Java", "url": "https://youtu.be/7HYaQOyvw7Q?si=" },
  { "title": "#38 Static Method in Java", "url": "https://youtu.be/zySudOTN05I?si=" },
  { "title": "#39 Static Block in java", "url": "https://youtu.be/_7q4kMfJPDw?si=" },
  { "title": "#40 Encapsulation in Java", "url": "https://youtu.be/YbqneqDIZh8?si=" },
  { "title": "#41 Getters and Setters in Java", "url": "https://youtu.be/VCHq1FEbZ3I?si=" },
  { "title": "#42 This keyword in Java", "url": "https://youtu.be/k_SJOnVa_G0?si=" },
  { "title": "#43 Constructor in Java", "url": "https://youtu.be/UC_aqNUFyVI?si=" },
  { "title": "#44 Default vs Parameterized Constructor in Java", "url": "https://youtu.be/49ptL_q7sxU?si=" },
  { "title": "#45 Naming Convention in Java", "url": "https://youtu.be/QZ1bsTqxmAw?si=" },
  { "title": "#46 Anonymous Object in java", "url": "https://youtu.be/ndTM5I2vtYQ?si=" },
  { "title": "#47 Need of Inheritance in Java", "url": "https://youtu.be/SVXyBkwYySA?si=" },
  { "title": "#48 What is Inheritance in Java", "url": "https://youtu.be/dFuVh_Bzy9c?si=" },
  { "title": "#49 Single and Multilevel inheritance in java", "url": "https://youtu.be/W91VFTTAM3s?si=" },
  { "title": "#50 Multiple Inheritance in Java", "url": "https://youtu.be/NTN8lO6yeqw?si=" },
  { "title": "#51 This and Super Method in Java", "url": "https://youtu.be/u2oT-qogaFI?si=" },
  { "title": "#52 Method Overriding in Java", "url": "https://youtu.be/CLzgS08equQ?si=" },
  { "title": "#53 Packages in Java", "url": "https://youtu.be/Bua6LQO2vQ8?si=" },
  { "title": "#54 Access Modifiers in Java", "url": "https://youtu.be/mlVYooy93sE?si=" },
  { "title": "#55 Polymorphism in Java", "url": "https://youtu.be/6U-0aUBiO5A?si=" },
  { "title": "#56 Dynamic Method Dispatch in Java", "url": "https://youtu.be/8C_YRYXCuwc?si=" },
  { "title": "#57 Final keyword in java", "url": "https://youtu.be/OBYeDzgsOxc?si=" },
  { "title": "#58 Object Class equals toString hashcode in Java", "url": "https://youtu.be/dCt9sfZV8Sg?si=" },
  { "title": "#59 Upcasting and Downcasting in Java", "url": "https://youtu.be/Q8cTydJSawQ?si=" },
  { "title": "#60 Wrapper Class in Java", "url": "https://youtu.be/Fyc86kVIePE?si=" },
  { "title": "#61 Abstract Keyword in Java", "url": "https://youtu.be/VJh2u7NLLDg?si=" },
  { "title": "#62 Inner Class in Java", "url": "https://youtu.be/UVOztdkD7WE?si=" },
  { "title": "#63 Anonymous Inner Class in Java", "url": "https://youtu.be/LNpUj80JLGI?si=" },
  { "title": "#64 Abstract and Anonymous Inner Class", "url": "https://youtu.be/4YnGBOyA2Q4?si=" },
  { "title": "#65 What is Interface in Java", "url": "https://youtu.be/A1uqgEz3hB0?si=" },
  { "title": "#66 Need of Interface in Java", "url": "https://youtu.be/AG_7wWFBquQ?si=" },
  { "title": "#67 More on Interfaces in Java", "url": "https://youtu.be/NYuoR06Fyy4?si=" },
  { "title": "#68 What is Enum in Java", "url": "https://youtu.be/k0iTgTuiEGY?si=" },
  { "title": "#69 Enum if and Switch in Java", "url": "https://youtu.be/ibSxjGKVU1E?si=" },
  { "title": "#70 Enum Class in Java", "url": "https://youtu.be/3iyKhywOZeg?si=" },
  { "title": "#71 What is Annotation in Java", "url": "https://youtu.be/1xuDEPftKV0?si=" },
  { "title": "#72 Types of Interface in Java", "url": "https://youtu.be/gTn48ZpeWOs?si=" },
  { "title": "#73 Functional Interface New in Java", "url": "https://youtu.be/Gs8ZPKCFlTc?si=" },
  { "title": "#74 Lambda Expression in Java", "url": "https://youtu.be/aecXHkZ-kJY?si=" },
  { "title": "#75 Lambda Expression with return", "url": "https://youtu.be/IvXf2pDCr5s?si=" },
  { "title": "#76  What is Exception in Java", "url": "https://youtu.be/5r_ERSm7NKE?si=" },
  { "title": "#77 Exception Handling Using try catch in Java", "url": "https://youtu.be/osEjmECD8bI?si=" },
  { "title": "#78 Try with Multiple Catch in Java", "url": "https://youtu.be/Ky8P70QlKNU?si=" },
  { "title": "#79  Exception Hierarchy in Java", "url": "https://youtu.be/IBttEEFkH_Y?si=" },
  { "title": "#80 Exception throw keyword in Java", "url": "https://youtu.be/kAOYeVYtukY?si=" },
  { "title": "#81 Custom Exception in Java", "url": "https://youtu.be/V_jVp6WdW0Y?si=" },
  { "title": "#82 Ducking Exception using throws in Java", "url": "https://youtu.be/y7C2dRC9C44?si=" },
  { "title": "#83 User Input using BufferedReader and Scanner in Java", "url": "https://youtu.be/bwHr9G5VIls?si=" },
  { "title": "#84 try with resources in Java", "url": "https://youtu.be/hVQR0ZHFk-o?si=" },
  { "title": "#85 Threads in Java", "url": "https://youtu.be/KuvkahVyY9E?si=" },
  { "title": "#86 Multiple Threads in Java", "url": "https://youtu.be/UfMM924sBvg?si=" },
  { "title": "#87 Thread Priority and Sleep in Java", "url": "https://youtu.be/yyLy-an_CXY?si=" },
  { "title": "#88 Runnable vs Thread in Java", "url": "https://youtu.be/Z4KSgLpY0d8?si=" },
  { "title": "#89 Race Condition in Java", "url": "https://youtu.be/7eV4nib3Cm8?si=" },
  { "title": "#90 Thread States in Java", "url": "https://youtu.be/IWll7sfz3g0?si=" },
  { "title": "#91 Collection API in Java", "url": "https://youtu.be/Kn1RbK02YpM?si=" },
  { "title": "#92 ArrayList in Java", "url": "https://youtu.be/BqQ0qR8kmw8?si=" },
  { "title": "#93 Set in Java", "url": "https://youtu.be/gMEVx7e5x6A?si=" },
  { "title": "#94 Map in Java", "url": "https://youtu.be/VcXYlkICcQU?si=" },
  { "title": "#95 Comparator vs Comparable in Java", "url": "https://youtu.be/ZA2oNhtNk3w?si=" },
  { "title": "#96 Need of Stream API in Java", "url": "https://youtu.be/B-U-ItdMUVw?si=" },
  { "title": "#97 forEach Method in Java", "url": "https://youtu.be/Z4PIhp5ifcw?si=" },
  { "title": "#98 Stream API in Java", "url": "https://youtu.be/ak3BxYzSqsQ?si=" },
  { "title": "#99 Map Filter Reduce Sorted  in Java", "url": "https://youtu.be/FH-FmcjEKnc?si=" },
  { "title": "Big Update for Java Learners and Trainers | JDK 21", "url": "https://youtu.be/PV5ds3uSXac?si=" },
  { "title": "Var in Java | New Java 10 Feature", "url": "https://youtu.be/2zXbRJty4vc?si=" },
  { "title": "Sealed Classes in Java | Java 17 features", "url": "https://youtu.be/glvYULuaf-k?si=" },
  { "title": "Record Classes in Java | Java 17 features", "url": "https://youtu.be/pmVgs8wOk5o?si=" },
  { "title": "JUnit 5 Tutorial by Hyder Abbas", "url": "https://youtu.be/laPmEW913_k?si=" }
]
    },
    {
      "slug": "csdojo-python",
      "creator": "CS Dojo",
      "topic": "Python for Logic Building",
      "language": "python",
      "thumbnail": "https://img.youtube.com/vi/Z1Yd7upQsXY/hqdefault.jpg",
      "videos": [
  { "title": "Python Tutorial for Absolute Beginners #1 - What Are Variables?", "url": "https://youtu.be/Z1Yd7upQsXY?si=" },
  { "title": "How to Use If Else Statements in Python (Python Tutorial #2)", "url": "https://youtu.be/AWek49wXGzI?si=" },
  { "title": "How To Use Functions In Python (Python Tutorial #3)", "url": "https://youtu.be/NSbOtYzIQI0?si=" },
  { "title": "Introduction To Lists In Python (Python Tutorial #4)", "url": "https://youtu.be/tw7ror9x32s?si=" },
  { "title": "Introduction to For Loops in Python (Python Tutorial #5)", "url": "https://youtu.be/OnDr4J2UXSA?si=" },
  { "title": "While Loops and The Break Statement in Python (Python Tutorial #6)", "url": "https://youtu.be/6TEGxJXLAWQ?si=" },
  { "title": "More About For Loops in Python & Solutions to the Last 2 Problems (Python Tutorial #7)", "url": "https://youtu.be/iVyWLmQ0QYA?si=" },
  { "title": "How To Use Dictionaries In Python (Python Tutorial #8)", "url": "https://youtu.be/ZEZdys-fHDw?si=" },
  { "title": "Classes and Objects with Python - Part 1 (Python Tutorial #9)", "url": "https://youtu.be/wfcWRAxRVBA?si=" },
  { "title": "Classes and Objects with Python - Part 2 (Python Tutorial #10)", "url": "https://youtu.be/WOwi0h_-dfA?si=" },
  { "title": "Using Boolean in Python (Python Tutorial #11)", "url": "https://youtu.be/r526yum0EYQ?si=" },
  { "title": "List Comprehension Basics with Python (Python Tutorial #12)", "url": "https://youtu.be/5K08WcjGV6c?si=" },
  { "title": "How To Use Sets in Python (Python Tutorial #13)", "url": "https://youtu.be/2u_ZExcNBzA?si=" },
  { "title": "6 Python Exercise Problems for Beginners - from CodingBat (Python Tutorial #14)", "url": "https://youtu.be/lx7oqZ7Nl3k?si=" },
  { "title": "How To Create A Twitter Bot With Python | Build a Startup #4", "url": "https://youtu.be/W0wWwglE1Vc?si=" },
  { "title": "I Created a New Q&A Website for Coders with Python | Devlog #1", "url": "https://youtu.be/RwOC7onT48Y?si=" }
]
    },
    {
      "slug": "freecode-js",
      "creator": "freeCodeCamp",
      "topic": "JavaScript Full Course",
      "language": "javascript",
      "thumbnail": "https://img.youtube.com/vi/PkZNo7MFNFg/hqdefault.jpg",
      "videos": [
        { "title": "Learn JavaScript | Full Course for Beginners", "url": "https://youtu.be/PkZNo7MFNFg?si=4hI4lAGuAmE6LVVc" }
      ]
    }
  ]
  